<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AcceleratorDetails />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <_.fcp.DataMapperState.true...DataMapperState />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <StorytellingArrowOnlyNavigator />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://public.tableau.com/workbooks/StorePerformanceAcceleratorFINAL_16921960839860?rev=1.0' id='GreenMallsSalesPerformance' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='Buttons' inline='true' name='federated.1dzyclc0ve0u6q139456w050ecbv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Buttons' name='textscan.0lri4681b67lgg1dp0icj1p1g2pf'>
            <connection class='textscan' directory='C:/Users/thiha/OneDrive/Desktop/DataAnalyticsProjects/GROCERY_SALES_ANALYSIS' filename='join_sales_edited.csv' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0lri4681b67lgg1dp0icj1p1g2pf' name='join_sales_edited.csv' table='[join_sales_edited#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='sales_id' ordinal='0' />
            <column datatype='integer' name='sales_person_id' ordinal='1' />
            <column datatype='integer' name='customer_id' ordinal='2' />
            <column datatype='integer' name='quantity' ordinal='3' />
            <column datatype='real' name='discount' ordinal='4' />
            <column datatype='datetime' name='sales_date' ordinal='5' />
            <column datatype='string' name='product_name' ordinal='6' />
            <column datatype='real' name='price' ordinal='7' />
            <column datatype='string' name='class_type' ordinal='8' />
            <column datatype='string' name='resistant' ordinal='9' />
            <column datatype='boolean' name='is_allergic' ordinal='10' />
            <column datatype='integer' name='vitality_days' ordinal='11' />
            <column datatype='string' name='category_name' ordinal='12' />
            <column datatype='string' name='customer_first_name' ordinal='13' />
            <column datatype='string' name='customer_last_name' ordinal='14' />
            <column datatype='string' name='customer_address' ordinal='15' />
            <column datatype='string' name='city_name' ordinal='16' />
            <column datatype='string' name='country_name' ordinal='17' />
            <column datatype='string' name='employee_first_name' ordinal='18' />
            <column datatype='string' name='employee_last_name' ordinal='19' />
            <column datatype='real' name='total_price' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sales_id]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>sales_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_person_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sales_person_id]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>sales_person_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[discount]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>discount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[sales_date]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>sales_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>class_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[class_type]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>class_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resistant</remote-name>
            <remote-type>129</remote-type>
            <local-name>[resistant]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>resistant</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_allergic</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_allergic]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>is_allergic</remote-alias>
            <ordinal>10</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vitality_days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vitality_days]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>vitality_days</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>category_name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_first_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>customer_first_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_last_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>customer_last_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_address]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>customer_address</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>city_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employee_first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[employee_first_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>employee_first_name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employee_last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[employee_last_name]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>employee_last_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_price]</local-name>
            <parent-name>[join_sales_edited.csv]</parent-name>
            <remote-alias>total_price</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]&quot;' value='Standard Deviation of Product Sales' />
          <alias key='&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]&quot;' value='Total Sales' />
        </aliases>
      </column>
      <column caption='Buttons for Parameter Action' datatype='string' name='[Button Text (copy)_3587117160024150024]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Buttons] IN(&quot;Sales Depressed&quot;, &quot;Sales&quot;) THEN &quot;Sales&quot; ELSE &quot;Units&quot; END' />
      </column>
      <column caption='Min/Max Sales' datatype='real' name='[Calculation_1230045702511702016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([total_price]) = WINDOW_MAX(SUM([total_price])) THEN SUM([total_price])&#13;&#10;ELSEIF SUM([total_price]) = WINDOW_MIN(SUM([total_price])) THEN SUM([total_price])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Min/Max Customers' datatype='integer' name='[Calculation_1230045702514966529]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF COUNTD([customer_id]) = WINDOW_MAX(COUNTD([customer_id])) THEN COUNTD([customer_id])&#13;&#10;ELSEIF  COUNTD([customer_id]) = WINDOW_MIN(COUNTD([customer_id])) THEN COUNTD([customer_id])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hours' datatype='datetime' name='[Calculation_1230045702545129480]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATETRUNC(&apos;hour&apos;,[sales_date])' />
      </column>
      <column caption='24 hour' datatype='integer' name='[Calculation_1230045702546632713]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(DATEPART(&apos;hour&apos;, [sales_date]))' />
      </column>
      <column caption='Min/Max Quantity' datatype='integer' name='[Calculation_1434678010924879872]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([quantity]) = WINDOW_MAX(SUM([quantity])) THEN SUM([quantity])&#13;&#10;ELSEIF SUM([quantity]) = WINDOW_MIN(SUM([quantity])) THEN SUM([quantity])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Recent Sales Diff Average' datatype='real' name='[Calculation_1434678010940723202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_price])/COUNTD([sales_date])' />
      </column>
      <column caption='Discount Price' datatype='real' name='[Calculation_1451285034155393024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[discount] * [price] * [quantity]' />
      </column>
      <column caption='Percent Category' datatype='real' default-format='p0.00%' name='[Calculation_1451285034159775746]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_price])/[Calculation_1451285034163322886]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Grand Total Sales' datatype='real' name='[Calculation_1451285034163322886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([total_price]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sum of Sales' datatype='real' name='[Calculation_1746833759681818632]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([total_price]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='TRUE for Deselect' datatype='boolean' name='[Calculation_1860549652539244549]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRUE' />
      </column>
      <column caption='FALSE for Deselect' datatype='boolean' name='[Calculation_1860549652539330566]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='FALSE' />
      </column>
      <column caption='Button Text' datatype='string' name='[Calculation_3587117160019701762]' role='dimension' semantic-role='' type='nominal'>
        <calculation class='tableau' formula='IF [Buttons] IN(&quot;Sales Depressed&quot;, &quot;Sales&quot;) THEN &quot;Sales&quot; ELSE &quot;Units Sold&quot; END' />
      </column>
      <column aggregation='Sum' caption='Depressed Buttons - Default Value' datatype='integer' name='[Calculation_391813224425725952]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='visit frequency' datatype='real' name='[Calculation_457115418637332504]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([sales_date])/128' />
      </column>
      <column caption='Visit Freq by City' datatype='real' name='[Calculation_457115418642690086]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_457115418637332504]/COUNTD([customer_id])' />
      </column>
      <column caption='join_sales_edited.csv' datatype='table' name='[__tableau_internal_object_id__].[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]' role='measure' type='quantitative' />
      <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
          <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
          <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
          <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
          <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
          <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
          <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
          <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
          <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
          <semantic-value key='&quot;Boston&quot;' value='42.361145' />
          <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
          <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
          <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
          <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
          <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
          <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
          <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
          <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
          <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
          <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
          <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
          <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
          <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
          <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
          <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
          <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
          <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
          <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
          <semantic-value key='&quot;Houston&quot;' value='29.749907' />
          <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
          <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
          <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
          <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
          <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
          <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
          <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
          <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
          <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
          <semantic-value key='&quot;Madison&quot;' value='43.073051' />
          <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
          <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
          <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
          <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
          <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
          <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
          <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
          <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
          <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
          <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
          <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
          <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
          <semantic-value key='&quot;Portland&quot;' value='45.512794' />
          <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
          <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
          <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
          <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
          <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
          <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
          <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
          <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
          <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
          <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
          <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
          <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
          <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
          <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
          <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
          <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
          <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
          <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
          <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
          <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
          <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
          <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
          <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
          <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
          <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
          <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
          <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
          <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
          <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
          <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
          <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
          <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
          <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
          <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
          <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
          <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
          <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
          <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
          <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
          <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
          <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
          <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
          <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
          <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
          <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
          <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
          <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
          <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
          <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
          <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
          <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
          <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
          <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
          <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
          <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
          <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
          <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
          <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
          <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
          <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
          <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
          <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
          <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
          <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
          <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
          <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
          <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
          <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
          <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
          <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
          <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
          <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
          <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
          <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
          <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
          <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
          <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
          <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
          <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
          <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
          <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
          <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
          <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
          <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
          <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
        </semantic-values>
      </column>
      <column caption='Class Type' datatype='string' name='[class_type]' role='dimension' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Address' datatype='string' name='[customer_address]' role='dimension' type='nominal' />
      <column caption='Customer First Name' datatype='string' name='[customer_first_name]' role='dimension' type='nominal' />
      <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
      <column caption='Customer Last Name' datatype='string' name='[customer_last_name]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[discount]' role='measure' type='quantitative' />
      <column caption='Employee First Name' datatype='string' name='[employee_first_name]' role='dimension' type='nominal' />
      <column caption='Employee Last Name' datatype='string' name='[employee_last_name]' role='dimension' type='nominal' />
      <column caption='Is Allergic' datatype='boolean' name='[is_allergic]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
      <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
      <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
      <column caption='Resistant' datatype='string' name='[resistant]' role='dimension' type='nominal' />
      <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
      <column caption='Sales Id' datatype='integer' name='[sales_id]' role='dimension' type='ordinal' />
      <column caption='Sales Person Id' datatype='integer' name='[sales_person_id]' role='dimension' type='ordinal' />
      <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
      <column caption='Vitality Days' datatype='integer' name='[vitality_days]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1451285034155393024]' derivation='Attribute' name='[attr:Calculation_1451285034155393024:qk]' pivot='key' type='quantitative' />
      <column-instance column='[city_name]' derivation='Attribute' name='[attr:city_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_price]' derivation='Attribute' name='[attr:total_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_price]' derivation='Avg' name='[avg:total_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_id]' derivation='Count' name='[cnt:customer_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[customer_id]' derivation='CountD' name='[ctd:customer_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_price]' derivation='Sum' name='[cum:sum:total_price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_price]' derivation='Sum' name='[diff:sum:total_price:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[total_price]' derivation='Sum' name='[diff:sum:total_price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[sales_date]' derivation='Month' name='[mn:sales_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1451285034155393024]' derivation='None' name='[none:Calculation_1451285034155393024:qk]' pivot='key' type='quantitative' />
      <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_price]' derivation='None' name='[none:total_price:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='95' column='[total_price]' derivation='Percentile' name='[prc95:total_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_price]' derivation='Stdev' name='[std:total_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1451285034155393024]' derivation='Sum' name='[sum:Calculation_1451285034155393024:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[vitality_days]' derivation='Sum' name='[sum:vitality_days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[sales_date]' derivation='Month-Trunc' name='[tmn:sales_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1230045702511702016]' derivation='User' name='[usr:Calculation_1230045702511702016:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1230045702514966529]' derivation='User' name='[usr:Calculation_1230045702514966529:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_457115418642690086]' derivation='User' name='[usr:Calculation_457115418642690086:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_price]' derivation='Stdev' name='[win:std:total_price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[total_price]' derivation='Sum' name='[win:sum:total_price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Category Name)' hidden='true' name='[Action (Category Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[category_name]' />
        </groupfilter>
      </group>
      <group caption='Action (City Name)' hidden='true' name='[Action (City Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city_name]' />
        </groupfilter>
      </group>
      <group caption='Action (City Name,Country Name)' hidden='true' name='[Action (City Name,Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city_name]' />
          <groupfilter function='level-members' level='[country_name]' />
        </groupfilter>
      </group>
      <group caption='Action (City Name,Customer First Name,Customer Id,Customer Last Name)' hidden='true' name='[Action (City Name,Customer First Name,Customer Id,Customer Last Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city_name]' />
          <groupfilter function='level-members' level='[customer_first_name]' />
          <groupfilter function='level-members' level='[customer_id]' />
          <groupfilter function='level-members' level='[customer_last_name]' />
        </groupfilter>
      </group>
      <group caption='Action (City Name,Customer First Name,Customer Last Name)' hidden='true' name='[Action (City Name,Customer First Name,Customer Last Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city_name]' />
          <groupfilter function='level-members' level='[customer_first_name]' />
          <groupfilter function='level-members' level='[customer_last_name]' />
        </groupfilter>
      </group>
      <group caption='Action (DAY(Sales Date))' hidden='true' name='[Action (DAY(Sales Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:sales_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (FALSE for Deselect)' hidden='true' name='[Action (FALSE for Deselect)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1860549652539330566]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Sales Date))' hidden='true' name='[Action (MONTH(Sales Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:sales_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Name)' hidden='true' name='[Action (Product Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_name]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country_name, city_name'>
          <field>[country_name]</field>
          <field>[city_name]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/thiha/AppData/Local/Temp/TableauTemp/#TableauTemp_1obnj4g1thnuim1dtv5vc0zef0y7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/13/2025 01:06:04 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>sales_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sales_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sales_id</remote-alias>
              <ordinal>0</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6638502</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sales_person_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sales_person_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sales_person_id</remote-alias>
              <ordinal>1</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[customer_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customer_id</remote-alias>
              <ordinal>2</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>576163</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quantity</remote-alias>
              <ordinal>3</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>discount</remote-alias>
              <ordinal>4</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sales_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[sales_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sales_date</remote-alias>
              <ordinal>5</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>6638502</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_name</remote-alias>
              <ordinal>6</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>452</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>7</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>436</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>class_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[class_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>class_type</remote-alias>
              <ordinal>8</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>resistant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[resistant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>resistant</remote-alias>
              <ordinal>9</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_allergic</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_allergic]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_allergic</remote-alias>
              <ordinal>10</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vitality_days</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vitality_days]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vitality_days</remote-alias>
              <ordinal>11</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category_name</remote-alias>
              <ordinal>12</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_first_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_first_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customer_first_name</remote-alias>
              <ordinal>13</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>969</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_last_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_last_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customer_last_name</remote-alias>
              <ordinal>14</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>995</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customer_address</remote-alias>
              <ordinal>15</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>412343</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city_name</remote-alias>
              <ordinal>16</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_name</remote-alias>
              <ordinal>17</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>employee_first_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[employee_first_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>employee_first_name</remote-alias>
              <ordinal>18</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>employee_last_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[employee_last_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>employee_last_name</remote-alias>
              <ordinal>19</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_price</remote-alias>
              <ordinal>20</ordinal>
              <family>join_sales_edited.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>91125</approx-count>
              <contains-null>true</contains-null>
              <object-id>[join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tacoma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:city_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tacoma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:category_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shell fish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cereals&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poultry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Snails&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Produce&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Confections&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dairy&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:sales_date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2018</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[attr:Calculation_1451285034155393024:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[none:Calculation_1451285034155393024:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:Calculation_1451285034155393024:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922145566721:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922150797315:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[win:std:total_price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_457115418642690086:qk]&quot;</bucket>
            </map>
            <map to='#5ab334'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv]&quot;</bucket>
            </map>
            <map to='#868686'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[cnt:customer_id:qk]&quot;</bucket>
            </map>
            <map to='#868686'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]&quot;</bucket>
            </map>
            <map to='#868686'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922229174303:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:vitality_days:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[attr:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[avg:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[cum:sum:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[diff:sum:total_price:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[diff:sum:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[none:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[prc95:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:vtsum:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[win:sum:total_price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='sales_id' />
        <field-sort-custom-order field='sales_person_id' />
        <field-sort-custom-order field='customer_id' />
        <field-sort-custom-order field='quantity' />
        <field-sort-custom-order field='discount' />
        <field-sort-custom-order field='Calculation_1451285034155393024' />
        <field-sort-custom-order field='sales_date' />
        <field-sort-custom-order field='product_name' />
        <field-sort-custom-order field='price' />
        <field-sort-custom-order field='class_type' />
        <field-sort-custom-order field='resistant' />
        <field-sort-custom-order field='is_allergic' />
        <field-sort-custom-order field='vitality_days' />
        <field-sort-custom-order field='category_name' />
        <field-sort-custom-order field='customer_first_name' />
        <field-sort-custom-order field='customer_last_name' />
        <field-sort-custom-order field='customer_address' />
        <field-sort-custom-order field='city_name' />
        <field-sort-custom-order field='country_name' />
        <field-sort-custom-order field='employee_first_name' />
        <field-sort-custom-order field='employee_last_name' />
        <field-sort-custom-order field='total_price' />
        <field-sort-custom-order field='Button Text (copy)_3587117160024150024' />
        <field-sort-custom-order field='Calculation_1860549652539244549' />
        <field-sort-custom-order field='Calculation_1860549652539330566' />
        <field-sort-custom-order field='Calculation_3587117160019701762' />
        <field-sort-custom-order field='Calculation_3587117160021458950' />
        <field-sort-custom-order field='Calculation_3587117160025206793' />
        <field-sort-custom-order field='Calculation_391813224425725952' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='join_sales_edited.csv' id='join_sales_edited.csv_EAB488039A3E4FB58A793DFFEE1478D8'>
            <properties context=''>
              <relation connection='textscan.0lri4681b67lgg1dp0icj1p1g2pf' name='join_sales_edited.csv' table='[join_sales_edited#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='sales_id' ordinal='0' />
                  <column datatype='integer' name='sales_person_id' ordinal='1' />
                  <column datatype='integer' name='customer_id' ordinal='2' />
                  <column datatype='integer' name='quantity' ordinal='3' />
                  <column datatype='real' name='discount' ordinal='4' />
                  <column datatype='datetime' name='sales_date' ordinal='5' />
                  <column datatype='string' name='product_name' ordinal='6' />
                  <column datatype='real' name='price' ordinal='7' />
                  <column datatype='string' name='class_type' ordinal='8' />
                  <column datatype='string' name='resistant' ordinal='9' />
                  <column datatype='boolean' name='is_allergic' ordinal='10' />
                  <column datatype='integer' name='vitality_days' ordinal='11' />
                  <column datatype='string' name='category_name' ordinal='12' />
                  <column datatype='string' name='customer_first_name' ordinal='13' />
                  <column datatype='string' name='customer_last_name' ordinal='14' />
                  <column datatype='string' name='customer_address' ordinal='15' />
                  <column datatype='string' name='city_name' ordinal='16' />
                  <column datatype='string' name='country_name' ordinal='17' />
                  <column datatype='string' name='employee_first_name' ordinal='18' />
                  <column datatype='string' name='employee_last_name' ordinal='19' />
                  <column datatype='real' name='total_price' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1dzyclc0ve0u6q139456w050ecbv'>
      <datasources>
        <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
      </datasources>
      <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
        <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
        <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
        <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
        <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]'>
        <groupfilter function='level-members' level='[category_name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]'>
        <groupfilter function='level-members' level='[city_name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]' included-values='in-range'>
        <min>0.040000000000000001</min>
        <max>99.879999999999995</max>
        <target field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]' />
      </filter>
      <filter class='quantitative' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' included-values='in-range'>
        <min>#2018-01-01 00:00:00#</min>
        <max>#2018-05-08 00:00:00#</max>
        <target field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Category Pie Chart' name='[Action3_FE127918A35B4857B25DC459C5628917]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Store Performance Analytics' type='sheet'>
        <exclude-sheet name='Sparkline - Units Sold' />
        <exclude-sheet name='Customer Rank' />
        <exclude-sheet name='Total Customer Title' />
        <exclude-sheet name='Sparkline Customers' />
        <exclude-sheet name='Map' />
        <exclude-sheet name='Total Quantity' />
        <exclude-sheet name='Sales by City Rank' />
        <exclude-sheet name='Sparkline - Sales' />
        <exclude-sheet name='Total Sales Title' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sparkline - Units Sold,Customer Rank,Total Customer Title,Sparkline Customers,Map,Total Quantity,Sales by City Rank,Sparkline - Sales,Total Sales Title' />
        <param name='special-fields' value='all' />
        <param name='target' value='Store Performance Analytics' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_CDA317613E63411386DB482AB9F67FAF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Store Performance Analytics' type='sheet' worksheet='Sparkline - Sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales by City Rank' />
        <param name='special-fields' value='all' />
        <param name='target' value='Store Performance Analytics' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_57B8CE9BC6814AB0835903F1934734AC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Store Performance Analytics' type='sheet' worksheet='Sparkline Customers' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales by City Rank' />
        <param name='special-fields' value='all' />
        <param name='target' value='Store Performance Analytics' />
      </command>
    </action>
    <action caption='Map' name='[Action6_65F5885F49AF4CACB54B887CD9B35673]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Store Performance Analytics' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Customer Rank,Sales by City Rank' />
        <param name='special-fields' value='all' />
        <param name='target' value='Store Performance Analytics' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_C95D58E00CDA4A498C3A339C6ECE4D9F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Store Performance Analytics' type='sheet' worksheet='Sparkline - Units Sold' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales by City Rank' />
        <param name='special-fields' value='all' />
        <param name='target' value='Store Performance Analytics' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Category Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Percent Category' datatype='real' default-format='p0.00%' name='[Calculation_1451285034159775746]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_price])/[Calculation_1451285034163322886]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Grand Total Sales' datatype='real' name='[Calculation_1451285034163322886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([total_price]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Month-Trunc' name='[tmn:sales_date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1451285034159775746]' derivation='User' name='[usr:Calculation_1451285034159775746:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1dzyclc0ve0u6q139456w050ecbv].[Calculation_1451285034163322886]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]'>
            <groupfilter function='level-members' level='[tmn:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[product_name]' user:ui-action-filter='[Action3_FE127918A35B4857B25DC459C5628917]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Product Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:category_name:nk]' />
              <wedge-size column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
              <size column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:category_name:nk]' />
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1451285034159775746:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[none:category_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Sales:&#9;</run>
                <run bold='true' fontcolor='#5ab334'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1451285034159775746:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{748366A7-50AF-4409-B217-4E4677E3D7DB}' />
    </worksheet>
    <worksheet name='City by Sales Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_738308922153512967]' role='measure' type='quantitative' user:unnamed='Sheet 17'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_738308922153512967]' derivation='User' name='[usr:Calculation_738308922153512967:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' direction='DESC' using='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922153512967:ok] / [federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk])</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]</cols>
      </table>
      <simple-id uuid='{68482060-F9B3-4180-81A5-96D33E084FC3}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Customer Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_1746833759686909974]' role='measure' type='quantitative' user:unnamed='Sheet 26'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Customer First Name' datatype='string' name='[customer_first_name]' role='dimension' type='nominal' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column caption='Customer Last Name' datatype='string' name='[customer_last_name]' role='dimension' type='nominal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_first_name]' derivation='None' name='[none:customer_first_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_id]' derivation='None' name='[none:customer_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customer_last_name]' derivation='None' name='[none:customer_last_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1746833759686909974]' derivation='User' name='[usr:Calculation_1746833759686909974:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action5_57B8CE9BC6814AB0835903F1934734AC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_first_name:nk]' direction='DESC' using='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_id:ok]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:customer_id:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_id:ok]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='144' />
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,.00K;(&quot;$&quot;#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_last_name:nk]' value='68' />
            <format attr='width' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_first_name:nk]' value='48' />
            <format attr='width' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1746833759686909974:ok]' value='32' />
            <format attr='width' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' num-steps='5' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1746833759686909974:ok] / ([federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_first_name:nk] / ([federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_last_name:nk] / [federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{28EC6056-F0C9-4DCD-AE13-D33581513ABC}' />
    </worksheet>
    <worksheet name='Discount vs Sales by City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Discount Price' datatype='real' name='[Calculation_1451285034155393024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[discount] * [price] * [quantity]' />
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Discount' datatype='real' name='[discount]' role='measure' type='quantitative' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1451285034155393024]' derivation='Sum' name='[sum:Calculation_1451285034155393024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:Calculation_1451285034155393024:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1451285034155393024])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Anchovy Paste - 56 G Tube&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Appetizer - Mini Egg Roll, Shrimp&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Appetizer - Mushroom Tart&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Appetizer - Sausage Rolls&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Apricots - Dried&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Apricots - Halves&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Apricots Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Arizona - Green Tea&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Artichokes - Jerusalem&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Assorted Desserts&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bacardi Breezer - Tropical&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bagel - Plain&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Baking Powder&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Banana - Leaves&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Banana Turning&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bananas&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bandage - Fexible 1x3&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bandage - Flexible Neon&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bar - Granola Trail Mix Fruit Nut&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bar Mix - Pina Colada, 355 Ml&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Barramundi&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bay Leaf&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beans - Kidney White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beans - Kidney, Canned&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beans - Kidney, Red Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beans - Wax&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Chuck, Boneless&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Ground Medium&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Ground, Extra Lean, Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Inside Round&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Montreal Smoked Brisket&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Prime Rib Aaa&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Rib Eye Aaa&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Short Loin&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Striploin Aa&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Tenderlion, Center Cut&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Texas Style Burger&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Top Sirloin&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef - Top Sirloin - Aaa&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef Ground Medium&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beef Wellington&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beer - Alexander Kieths, Pale Ale&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beer - Blue&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beer - Labatt Blue&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beer - Original Organic Lager&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beer - Rickards Red&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beer - Sleemans Cream Ale&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beets - Candy Cane, Organic&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Beets - Mini Golden&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Berry Brulee&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Black Currants&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Blackberries&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Blueberries&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bouq All Italian - Primerba&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Brandy - Bar&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Bistro White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Calabrese Baguette&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - English Muffin&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - French Baquette&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Hot Dog Buns&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Italian Corn Meal Poly&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Italian Roll With Herbs&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Multigrain&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Raisin Walnut Oval&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Roll, Canadian Dinner&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Roll, Soft White Round&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread - Rye&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread Crumbs - Japanese Style&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread Crumbs - Panko&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread Fig And Almond&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Bread Foccacia Whole&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Broom - Corn&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Browning Caramel Glace&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Butter - Unsalted&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cake - Box Window 10x10x2.5&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cake - Cake Sheet Macaroon&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cake - Mini Cheesecake&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Campari&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Carbonated Water - Blackcherry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Carbonated Water - Cherry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cassis&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cattail Hearts&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Bocconcini&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Boursin, Garlic / Herbs&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Brie, Triple Creme&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Brie,danish&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Cambozola&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Camembert&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Cheddarsliced&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Cottage Cheese&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Mix&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Mozzarella&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Parmesan Cubes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Parmesan Grated&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Taleggio D.o.p.&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Victor Et Berthold&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese - Wine&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cheese Cloth No 100&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chef Hat 20cm&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chestnuts - Whole,canned&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chicken - Leg, Boneless&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chicken - Soup Base&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chicken - Wieners&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chinese Foods - Chicken&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chips Potato All Dressed - 43g&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chips Potato Salt Vinegar 43g&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chocolate - Compound Coating&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chocolate - Dark&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chocolate - Feathers&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Chocolate - Semi Sweet, Calets&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cinnamon Buns Sticky&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Clam Nectar&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cocktail Napkin Blue&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cocoa Butter&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Coconut - Shredded, Sweet&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cod - Black Whole Fillet&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Coffee - Dark Roast&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Coffee - Hazelnut Cream&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Coffee - Irish Cream&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Coffee Decaf Colombian&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cookie - Dough Variety&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cookie Chocolate Chip With&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cookie Dough - Double&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cookies - Assorted&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cookies Cereal Nut&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Corn Meal&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cornflakes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Crab - Dungeness, Whole&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Crab - Imitation Flakes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Crackers - Trio&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Crackers Cheez It&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cream Of Tartar&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Creme De Banane - Marie&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Crush - Cream Soda&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cumin - Whole&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cup - 6oz, Foam&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Cup - Translucent 7 Oz Clear&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Curry Paste - Madras&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Dc - Frozen Momji&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Dc Hikiage Hira Huba&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Doilies - 5, Paper&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Dried Figs&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Duck - Breast&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Durian Fruit&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ecolab - Lime - A - Way 4/4 L&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ecolab - Mikroklene 4/4 L&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ecolab - Solid Fusion&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Eggplant - Asian&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Extract - Lemon&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ezy Change Mophandle&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Fenngreek Seed&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Fish - Scallops, Cold Smoked&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Flavouring - Orange&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Flour - Pastry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Flour - Teff&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Flour - Whole Wheat&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Foam Cup 6 Oz&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Foam Dinner Plate&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Fond - Neutral&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Fondant - Icing&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;French Pastry - Mini Chocolate&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Fuji Apples&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Garbag Bags - Black&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Garbage Bags - Clear&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Garlic&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Garlic - Elephant&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Garlic - Peeled&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Garlic - Primerba, Paste&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Gatorade - Xfactor Berry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;General Purpose Trigger&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Gloves - Goldtouch Disposable&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Grapes - Red&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Grenadine&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Grouper - Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Guinea Fowl&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Halibut - Fletches&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Halibut - Steaks&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Hersey Shakes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Hickory Smoke, Liquid&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Hinge W Undercut&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Hot Chocolate - Individual&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ice - Clear, 300 Lb For Carving&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ice Cream Bar - Drumstick&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ice Cream Bar - Hageen Daz To&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ice Cream Bar - Oreo Cone&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Initation Crab Meat&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Island Oasis - Mango Daiquiri&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Isomalt&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Jagermeister&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Jolt Cola - Electric Blue&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Juice - Apple Cider&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Juice - Cranberry, 341 Ml&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Juice - Happy Planet&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Juice - Lime&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Juice - Orange&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Juice - V8 Splash&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Kellogs All Bran Bars&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Kellogs Special K Cereal&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ketchup - Tomato&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Kiwi&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Knife Plastic - White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lamb - Ground&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lamb - Pieces, Diced&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lamb - Whole, Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lambcasing&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Langers - Ruby Red Grapfruit&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lemonade - Natural, 591 Ml&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lentils - Red, Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lettuce - California Mix&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lettuce - Frisee&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lettuce - Spring Mix&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lettuce - Treviso&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Lime Cordial - Roses&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Liners - Baking Cups&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Liners - Banana, Paper&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Longos - Chicken Wings&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Longos - Grilled Chicken With&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Longos - Grilled Salmon With Bbq&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Loquat&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Macaroons - Two Bite Choc&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mangoes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mayonnaise - Individual Pkg&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Meldea Green Tea Liquor&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Milk - 1\%&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Milk - 2\%&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Milk Powder&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Muffin - Carrot Individual Wrap&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Muffin - Zero Transfat&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Muffin Batt - Blueberry Passion&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Muffin Batt - Choc Chk&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Muffin Chocolate Individual Wrap&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Muffin Mix - Blueberry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mushroom - Porcini, Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mushroom - Trumpet, Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mushrooms - Black, Dried&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mussels - Cultivated&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mussels - Frozen&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mustard - Seed&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Mustard Prepared&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Nantucket - Pomegranate Pear&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Nantuket Peach Orange&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Napkin White - Starched&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Nut - Chestnuts, Whole&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Nut - Pistachio, Shelled&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ocean Spray - Kiwi Strawberry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Ocean Spray - Ruby Red&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Oil - Safflower&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Oil - Shortening - All - Purpose&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Oil - Shortening,liqud, Fry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Olive - Spread Tapenade&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Olives - Kalamata&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Olives - Stuffed&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Onion Powder&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Onions - Cippolini&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Onions - Vidalia&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Orange - Canned, Mandarin&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Oranges - Navel, 72&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Oregano - Dry, Rubbed&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Otomegusa Dashi Konbu&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pail For Lid 1537&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pail With Metal Handle 16l White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pants Custom Dry Clean&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Papayas&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pasta - Angel Hair&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pasta - Cheese / Spinach Bauletti&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pasta - Detalini, White, Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pasta - Orecchiette&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pasta - Penne, Rigate, Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pastry - Butterscotch Baked&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pastry - Cheese Baked Scones&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pastry - Choclate Baked&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pastry - Raisin Muffin - Mini&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pate - Cognac&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pears - Bosc&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Peas - Frozen&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Peas - Pigeon, Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pecan Raisin - Tarts&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pepper - Black, Whole&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pepper - Paprika, Hungarian&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pepper - White, Ground&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pepsi - Diet, 355 Ml&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pernod&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Phyllo Dough&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pickerel - Fillets&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pie Filling - Cherry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Placemat - Scallop, White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pomello&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pop Shoppe Cream Soda&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Back, Short Cut, Boneless&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Bacon, Double Smoked&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Belly Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Hock And Feet Attached&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Inside&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Kidney&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Loin, Bone - In&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Pork - Loin, Center Cut&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Potatoes - Idaho 100 Count&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Potatoes - Instant, Mashed&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Puree - Mocha&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Puree - Passion Fruit&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Quiche Assorted&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rabbit - Whole&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rambutan&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Raspberries - Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Remy Red&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rice - Jasmine Sented&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rice - Long Grain&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rosemary - Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rosemary - Primerba, Paste&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rum - Coconut, Malibu&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Rum - Mount Gay Eclipes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sage - Ground&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Salmon - Atlantic, Skin On&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Salmon - Sockeye Raw&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Salmon Steak - Cohoe 8 Oz&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Salsify, Organic&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sardines&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sauce - Demi Glace&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sauce - Gravy, Au Jus, Mix&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sauce - Hollandaise&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sauce - Rosee&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sauerkraut&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sausage - Breakfast&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sausage - Liver&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Scallop - St. Jaques&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Scallops - 10/20&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Scallops - Live In Shell&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Scallops 60/80 Iqf&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Scampi Tail&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sea Bass - Whole&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Seedlings - Mix, Organic&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sherry - Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Shrimp - 31/40&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Shrimp - Baby, Warm Water&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Skirt - 29 Foot&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Smirnoff Green Apple Twist&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Smoked Paprika&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Snapple - Iced Tea Peach&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Snapple Lemon Tea&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sobe - Tropical Energy&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sole - Dover, Whole, Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup - Campbells Bean Medley&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup - Campbells Tomato Ravioli&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup - Campbells, Beef Barley&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup - Campbells, Cream Of&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup - Campbells, Lentil&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup - Canadian Pea, Dry Mix&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup Campbells - Italian Wedding&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup Knorr Chili With Beans&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soup V8 Roasted Red Pepper&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soupcontfoam16oz 116con&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Soupfoamcont12oz 112con&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Spice - Peppercorn Melange&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Spinach - Baby&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sponge Cake Mix - Chocolate&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Spoon - Soup, Plastic&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sprouts - Alfalfa&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sprouts - Baby Pea Tendrils&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Squid - Tubes / Tenticles 10/20&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Squid U5 - Thailand&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Steam Pan - Half Size Deep&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sugar - Fine&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sun - Dried Tomatoes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sunflower Seed Raw&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Sword Pick Asst&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Table Cloth - 53x69 Colour&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Table Cloth 120 Round White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Table Cloth 54x72 White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Table Cloth 62x114 White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Table Cloth 81x81 White&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tahini Paste&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tart Shells - Sweet, 4&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tea - Decaf Lipton&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tea - Earl Grey&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tea - English Breakfast&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tea - Herbal Sweet Dreams&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tea - Jasmin Green&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Thermometer Digital&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Thyme - Lemon, Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tia Maria&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tilapia - Fillets&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tofu - Firm&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tomato - Tricolor Cherry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tomatoes Tear Drop&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Towels - Paper / Kraft&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tray - 16in Rnd Blk&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Truffle Cups - Brown&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Tuna - Salad Premix&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Turkey - Oven Roast Breast&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Turkey - Whole, Fresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Turnip - White, Organic&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;V8 - Berry Blend&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Vaccum Bag 10x13&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Vanilla Beans&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Veal - Brisket, Provimi,bnls&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Veal - Eye Of Round&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Veal - Inside&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Veal - Inside, Choice&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Veal - Osso Bucco&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Veal - Slab Bacon&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Veal - Sweetbread&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Vinegar - Sherry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Vinegar - Tarragon&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Vol Au Vents&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wanton Wrap&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wasabi Powder&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Water - Aquafina Vitamin&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Water - Green Tea Refresher&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Water - Mineral, Natural&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Water - Spring Water 500ml&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Water, Tap&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Watercress&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Whmis - Spray Bottle Trigger&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wiberg Super Cure&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Alsace Gewurztraminer&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Blue Nun Qualitatswein&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Cahors Ac 2000, Clos&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Chablis 2003 Champs&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Charddonnay Errazuriz&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Chardonnay South&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Crozes Hermitage E.&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Ej Gallo Sierra Valley&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Fume Blanc Fetzer&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Gato Negro Cabernet&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Hardys Bankside Shiraz&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Magnotta - Belpaese&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Magnotta - Cab Sauv&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Magnotta, Merlot Sr Vqa&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Pinot Noir Latour&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Prosecco Valdobiaddene&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Red, Colio Cabernet&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Red, Cooking&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Red, Harrow Estates, Cab&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Redchard Merritt&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Ruffino Chianti&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Sogrape Mateus Rose&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Toasted Head&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Two Oceans Cabernet&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Valpolicella Masi&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Vidal Icewine Magnotta&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Vineland Estate Semi - Dry&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - White Cab Sauv.on&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - White, Colubia Cresh&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - White, Mosel Gold&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - White, Schroder And Schyl&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wine - Wyndham Estate Bin 777&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Wonton Wrappers&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Yeast Dry - Fermipan&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Yoghurt Tubes&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Yogurt - Blueberry, 175 Gr&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Yogurt - French Vanilla&quot;' />
                  <groupfilter function='member' level='[none:product_name:nk]' member='&quot;Zucchini - Yellow&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' direction='DESC' measure-to-sort-by='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[:Measure Names]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:Calculation_1451285034155393024:qk]' value='c&quot;$&quot;#,##0,.00K;(&quot;$&quot;#,##0,.00K)' />
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk] / [federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk])</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{18D9607A-8537-4002-B5FD-AB18126192CB}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Month-Trunc' name='[tmn:sales_date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]'>
            <groupfilter function='level-members' level='[tmn:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[Longitude (generated)]' field-type='quantitative' max='-6966487.5173862111' min='-16544434.796847545' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[Latitude (generated)]' field-type='quantitative' max='6772095.3472737875' min='2543122.6941819605' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]' value='Cities'>
              <formatted-text>
                <run>Cities</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]' value='Categories'>
              <formatted-text>
                <run>Categories</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:country_name:nk]' />
              <lod column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' />
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>City Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[none:country_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Sales:&#9;</run>
                <run bold='true' fontcolor='#5ab334'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1dzyclc0ve0u6q139456w050ecbv].[Latitude (generated)]</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{333B4807-A2C8-4627-990A-B75EF6DD5148}' />
    </worksheet>
    <worksheet name='Sales by City Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_1158551058125185027]' role='measure' type='quantitative' user:unnamed='Sales by City Rank'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1158551058125185027]' derivation='User' name='[usr:Calculation_1158551058125185027:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1158551058125185027:ok]' value='36' />
            <format attr='width' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' value='136' />
            <format attr='background-color' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1158551058125185027:ok] / [federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3AD83B6A-F204-454D-BA5B-A4A786585D07}' />
    </worksheet>
    <worksheet name='Sales by Product Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_1451285034166841356]' role='measure' type='quantitative' user:unnamed='Sales by Product Category'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Month-Trunc' name='[tmn:sales_date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1451285034166841356]' derivation='User' name='[usr:Calculation_1451285034166841356:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]'>
            <groupfilter function='level-members' level='[tmn:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]' direction='DESC' using='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' scope='cols' value='false' />
            <format attr='stroke-color' value='#d4d4d4' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:ok]' value='c&quot;$&quot;#,##0,.00K;(&quot;$&quot;#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
            <format attr='band-color' scope='rows' value='#f5f5f5' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#666666' />
            <format attr='font-family' value='Tableau Book' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:ok]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#00000000' />
            <format attr='band-level' scope='rows' value='3' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Total Sales:</run>
                <run bold='true' fontcolor='#000000'>Æ </run>
                <run bold='true' fontcolor='#5ab334'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4942541122436523' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#5ab334' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1451285034166841356:ok] / ([federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk] / [federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:ok]))</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]</cols>
      </table>
      <simple-id uuid='{3C8870E5-ECB3-4AC6-B64E-B1DF9597D225}' />
    </worksheet>
    <worksheet name='Sales variations of products by city'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales Variations of Products ( Standard Deviation of Product Sales by City)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_738308922145566721]' role='measure' type='quantitative' user:unnamed='Sales variations of products by city'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Stdev' name='[std:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_738308922145566721]' derivation='User' name='[usr:Calculation_738308922145566721:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Akron&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Albuquerque&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Anaheim&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Anchorage&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Arlington&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Atlanta&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Aurora&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Austin&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Bakersfield&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Baltimore&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Baton Rouge&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Birmingham&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Boston&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Buffalo&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Charlotte&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Cincinnati&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Cleveland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Columbus&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Corpus Christi&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Dayton&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Denver&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Des Moines&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Detroit&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;El Paso&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fort Wayne&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fort Worth&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fremont&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fresno&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Garland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Glendale&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Grand Rapids&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Greensboro&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Hialeah&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Honolulu&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Indianapolis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Jackson&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Jacksonville&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Lincoln&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Little Rock&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Long Beach&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Louisville&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Lubbock&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Madison&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Memphis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Mesa&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Miami&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Milwaukee&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Minneapolis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Mobile&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Montgomery&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Nashville&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;New Orleans&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Newark&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Norfolk&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Oakland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Omaha&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Philadelphia&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Phoenix&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Pittsburgh&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Portland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Raleigh&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Riverside&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Rochester&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Sacramento&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Antonio&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Diego&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Francisco&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Jose&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Santa Ana&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Seattle&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Shreveport&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Spokane&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;St. Louis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;St. Paul&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;St. Petersburg&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Stockton&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tacoma&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tampa&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Toledo&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tucson&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tulsa&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Virginia Beach&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Wichita&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Yonkers&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' direction='ASC' using='[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]' />
          <filter class='quantitative' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]' included-values='in-range'>
            <min>526.09206688350014</min>
            <max>565.93977793806994</max>
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[:Measure Names]' />
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922145566721:ok] / [federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk])</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[std:total_price:qk]</cols>
        <subtotals>
          <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0B5BFECB-C02F-4DE8-9152-BE2A3383F35B}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]'>
            <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Long Beach&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,.00K;(&quot;$&quot;#,##0,.00K)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk] / [federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk])</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]</cols>
      </table>
      <simple-id uuid='{F6D07B41-13E6-41B5-9820-1A946B14A795}' />
    </worksheet>
    <worksheet name='Sparkline - Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Min/Max Sales' datatype='real' name='[Calculation_1230045702511702016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([total_price]) = WINDOW_MAX(SUM([total_price])) THEN SUM([total_price])&#13;&#10;ELSEIF SUM([total_price]) = WINDOW_MIN(SUM([total_price])) THEN SUM([total_price])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045702511702016]' derivation='User' name='[usr:Calculation_1230045702511702016:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' field-type='quantitative' major-origin='#2018-03-05 00:00:00#' major-spacing='2.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' value='29' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#c1d2b9</color>
                <color>#aacc9c</color>
                <color>#94c67f</color>
                <color>#80bf65</color>
                <color>#6cb94b</color>
                <color>#5ab334</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#5ab334' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#5ab3344b' />
            <format attr='stroke-color' scope='cols' value='#5ab3344b' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='background-color' id='refline0' value='#ffffff7f' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]' value='Price Range'>
              <formatted-text>
                <run>Price Range</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' z-order='1' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#1b1b1b' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run bold='true' fontcolor='#898989' indent='3780'>Total Sales: </run>
                <run bold='true' fontcolor='#5ab334' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#1b1b1b' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run bold='true' fontcolor='#898989' indent='3780'>Total Sales: </run>
                <run bold='true' fontcolor='#5ab334' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#0039a667' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk]' />
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#1b1b1b' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run bold='true' fontcolor='#898989' indent='3780'>Total Sales: </run>
                <run bold='true' fontcolor='#5ab334' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk] + [federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk])</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</cols>
      </table>
      <simple-id uuid='{D9B55A4F-DDE9-4D8C-85A9-A191ECB8366D}' />
    </worksheet>
    <worksheet name='Sparkline - Units Sold'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Min/Max Quantity' datatype='integer' name='[Calculation_1434678010924879872]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([quantity]) = WINDOW_MAX(SUM([quantity])) THEN SUM([quantity])&#13;&#10;ELSEIF SUM([quantity]) = WINDOW_MIN(SUM([quantity])) THEN SUM([quantity])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Month-Trunc' name='[tmn:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1434678010924879872]' derivation='User' name='[usr:Calculation_1434678010924879872:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]'>
            <groupfilter function='level-members' level='[tmn:sales_date:ok]' user:ui-action-filter='[Action2_281168D7E3C34C759E1B62F30E07E053]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (MONTH(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' field-type='quantitative' major-origin='#2018-03-05 00:00:00#' major-spacing='2.0' major-units='months' scope='cols' type='space' />
            <format attr='height' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' value='28' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1434678010924879872:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1434678010924879872:qk]' scope='rows' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1434678010924879872:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#c1d2b9</color>
                <color>#aacc9c</color>
                <color>#94c67f</color>
                <color>#80bf65</color>
                <color>#6cb94b</color>
                <color>#5ab334</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#5ab33484' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' z-order='1' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#b4b4b4'>Total Units Sold:</run>
                <run bold='true' fontcolor='#ff0000'>Æ </run>
                <run bold='true' fontcolor='#5ab334'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#b4b4b4'>Total Units Sold:</run>
                <run bold='true' fontcolor='#ff0000'>Æ </run>
                <run bold='true' fontcolor='#5ab334'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1434678010924879872:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1434678010924879872:qk]' />
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#b4b4b4'>Total Units Sold:</run>
                <run bold='true' fontcolor='#ff0000'>Æ </run>
                <run bold='true' fontcolor='#5ab334'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
                <format attr='mark-transparency' value='167' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk] + [federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1434678010924879872:qk])</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</cols>
      </table>
      <simple-id uuid='{713BF43A-6E22-4AE9-BEDA-768765DF171C}' />
    </worksheet>
    <worksheet name='Sparkline Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Min/Max Customers' datatype='integer' name='[Calculation_1230045702514966529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF COUNTD([customer_id]) = WINDOW_MAX(COUNTD([customer_id])) THEN COUNTD([customer_id])&#13;&#10;ELSEIF  COUNTD([customer_id]) = WINDOW_MIN(COUNTD([customer_id])) THEN COUNTD([customer_id])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[sales_date]' derivation='Attribute' name='[attr:sales_date:ok]' pivot='key' type='ordinal' />
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[customer_id]' derivation='CountD' name='[ctd:customer_id:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1230045702514966529]' derivation='User' name='[usr:Calculation_1230045702514966529:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action6_C95D58E00CDA4A498C3A339C6ECE4D9F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' field-type='quantitative' major-origin='#2018-03-05 12:00:00#' major-spacing='2.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' value='31' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#c1d2b9</color>
                <color>#aacc9c</color>
                <color>#94c67f</color>
                <color>#80bf65</color>
                <color>#6cb94b</color>
                <color>#5ab334</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-format' id='refline0' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='background-color' id='refline0' value='#ffffff7f' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#5ab33486' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]' value='Cities'>
              <formatted-text>
                <run>Cities</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]' value='Product Categories'>
              <formatted-text>
                <run>Product Categories</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' value='Date Range'>
              <formatted-text>
                <run>Date Range</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' />
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[attr:sales_date:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' z-order='1' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run bold='true' fontcolor='#898989' indent='3780'>Total Customers: </run>
                <run bold='true' fontcolor='#5ab334' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' />
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[attr:sales_date:ok]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run bold='true' fontcolor='#898989' indent='3780'>Total Customers: </run>
                <run bold='true' fontcolor='#5ab334' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk]' />
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]' />
              <tooltip column='[federated.1dzyclc0ve0u6q139456w050ecbv].[attr:sales_date:ok]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
                <run bold='true' fontcolor='#898989' indent='3780'>Total Customers: </run>
                <run bold='true' fontcolor='#5ab334' indent='3780'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk]>]]></run>
                <run indent='3780'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#898989' />
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[ctd:customer_id:qk] + [federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk])</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</cols>
      </table>
      <simple-id uuid='{773761C9-CCD9-421A-9515-F8713CAA09A7}' />
    </worksheet>
    <worksheet name='Top Selling Products by cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk] / [federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{9F2978B2-9388-4B32-86FA-854E6064CCBA}' />
    </worksheet>
    <worksheet name='Total Customer Title'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column-instance column='[customer_id]' derivation='Count' name='[cnt:customer_id:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action5_57B8CE9BC6814AB0835903F1934734AC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[cnt:customer_id:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[cnt:customer_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Total Customer Walk-ins:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[cnt:customer_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontsize='12'>Total Customer Walk-ins</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#5ab334' fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[cnt:customer_id:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{61A86079-E690-43EF-A64B-ABBD76541DA9}' />
    </worksheet>
    <worksheet name='Total Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action5_57B8CE9BC6814AB0835903F1934734AC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Total Quantity:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontsize='12'>Total Quantity</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#5ab334' fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:quantity:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D2FA09B4-D93D-432B-AA75-51A72831D015}' />
    </worksheet>
    <worksheet name='Total Sales Title'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_65F5885F49AF4CACB54B887CD9B35673]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city_name]' />
              <groupfilter function='level-members' level='[country_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]'>
            <groupfilter function='level-members' level='[tdy:sales_date:ok]' user:ui-action-filter='[Action5_57B8CE9BC6814AB0835903F1934734AC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name,Country Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (DAY(Sales Date))]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontsize='12'>Total Sales</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#5ab334' fontname='Tableau Semibold' fontsize='22'><![CDATA[<[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A5EA1C0E-B6E9-4180-B5C3-D3DE407CF4CD}' />
    </worksheet>
    <worksheet name='Visit Freq New'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='WINDOW_SUM(COUNTD(DATETRUNC(&apos;day&apos;, [Sales Date]))/128)/WINDOW...' datatype='real' name='[Calculation_738308922229248032]' role='measure' type='quantitative' user:unnamed='Sheet 19'>
              <calculation class='tableau' formula='WINDOW_SUM(COUNTD(DATETRUNC(&apos;day&apos;, [sales_date]))/128)/WINDOW_SUM(COUNTD([customer_id]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_id]' derivation='None' name='[none:customer_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_738308922229248032]' derivation='User' name='[usr:Calculation_738308922229248032:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]'>
            <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Akron&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk] / ([federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_id:ok] / [federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922229248032:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{8C4E54CA-826D-4EC0-B2DD-EA3A04A192A9}' />
    </worksheet>
    <worksheet name='Visit Freq Rank'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Frequencies of Customer Visits by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_1362057470892826625]' role='measure' type='quantitative' user:unnamed='Visit Freq Rank'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='visit frequency' datatype='real' name='[Calculation_457115418637332504]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([sales_date])/128' />
            </column>
            <column caption='Visit Freq by City' datatype='real' name='[Calculation_457115418642690086]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_457115418637332504]/COUNTD([customer_id])' />
            </column>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1362057470892826625]' derivation='User' name='[usr:Calculation_1362057470892826625:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_457115418642690086]' derivation='User' name='[usr:Calculation_457115418642690086:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Akron&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Albuquerque&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Anaheim&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Anchorage&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Arlington&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Atlanta&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Aurora&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Austin&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Bakersfield&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Baltimore&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Baton Rouge&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Birmingham&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Boston&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Buffalo&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Charlotte&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Cincinnati&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Cleveland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Columbus&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Corpus Christi&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Dayton&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Denver&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Des Moines&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Detroit&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;El Paso&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fort Wayne&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fort Worth&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fremont&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Fresno&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Garland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Glendale&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Grand Rapids&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Greensboro&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Hialeah&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Honolulu&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Indianapolis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Jackson&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Jacksonville&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Lincoln&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Little Rock&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Long Beach&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Louisville&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Lubbock&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Madison&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Memphis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Mesa&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Miami&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Milwaukee&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Minneapolis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Mobile&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Montgomery&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Nashville&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;New Orleans&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Newark&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Norfolk&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Oakland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Omaha&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Philadelphia&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Phoenix&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Pittsburgh&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Portland&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Raleigh&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Riverside&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Rochester&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Sacramento&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Antonio&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Diego&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Francisco&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;San Jose&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Santa Ana&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Seattle&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Shreveport&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Spokane&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;St. Louis&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;St. Paul&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;St. Petersburg&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Stockton&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tacoma&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tampa&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Toledo&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tucson&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Tulsa&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Virginia Beach&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Wichita&quot;' />
              <groupfilter function='member' level='[none:city_name:nk]' member='&quot;Yonkers&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' direction='DESC' using='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_457115418642690086:qk]' />
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_457115418642690086:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_457115418642690086:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_457115418642690086:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[:Measure Names]' />
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_457115418642690086:qk]' />
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1362057470892826625:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_457115418642690086:qk]</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</cols>
      </table>
      <simple-id uuid='{ED61643B-A37F-42FD-8868-595433053723}' />
    </worksheet>
    <worksheet name='sales by days'>
      <table>
        <view>
          <datasources>
            <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081757000000003' />
                <semantic-value key='&quot;Anchorage&quot;' value='61.217381000000003' />
                <semantic-value key='&quot;Arlington&quot;' value='32.705002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Aurora&quot;' value='39.710835000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.266666000000001' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.393528000000003' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.299236000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.543681999999997' />
                <semantic-value key='&quot;Boston&quot;' value='42.361145' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.880229999999997' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.227085000000002' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103119' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.505493000000001' />
                <semantic-value key='&quot;Colorado&quot;' value='36.994076' />
                <semantic-value key='&quot;Columbus&quot;' value='39.983333999999999' />
                <semantic-value key='&quot;Dallas&quot;' value='32.779167000000001' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758949000000001' />
                <semantic-value key='&quot;Denver&quot;' value='39.742043000000002' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.619548999999999' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331429' />
                <semantic-value key='&quot;El Paso&quot;' value='31.772542999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548271' />
                <semantic-value key='&quot;Fresno&quot;' value='36.746841000000003' />
                <semantic-value key='&quot;Garland&quot;' value='32.907223000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='34.142508999999997' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='42.963794999999998' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.044659000000003' />
                <semantic-value key='&quot;Houston&quot;' value='29.749907' />
                <semantic-value key='&quot;Jackson&quot;' value='32.298755999999997' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.332184000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='40.719073999999999' />
                <semantic-value key='&quot;Kansas&quot;' value='39.099724000000002' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.188110000000002' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.806862000000002' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.734999999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.767000000000003' />
                <semantic-value key='&quot;Louisville&quot;' value='38.328732000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.073051' />
                <semantic-value key='&quot;Memphis&quot;' value='35.1175' />
                <semantic-value key='&quot;Mesa&quot;' value='33.424563999999997' />
                <semantic-value key='&quot;Miami&quot;' value='25.761680999999999' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.986656000000004' />
                <semantic-value key='&quot;Montgomery&quot;' value='32.361668000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.174464999999998' />
                <semantic-value key='&quot;Newark&quot;' value='40.735657000000003' />
                <semantic-value key='&quot;Norfolk&quot;' value='36.850769' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804363000000002' />
                <semantic-value key='&quot;Omaha&quot;' value='41.257159999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952582999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448376000000003' />
                <semantic-value key='&quot;Portland&quot;' value='45.512794' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.787742999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='37.541289999999996' />
                <semantic-value key='&quot;Riverside&quot;' value='33.95335' />
                <semantic-value key='&quot;Rochester&quot;' value='43.161029999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.575763999999999' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424119999999998' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715736' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.773972000000001' />
                <semantic-value key='&quot;San Jose&quot;' value='37.335479999999997' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658779000000003' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.630000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='44.954445' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='27.773056' />
                <semantic-value key='&quot;Stockton&quot;' value='37.961632000000002' />
                <semantic-value key='&quot;Tampa&quot;' value='27.964157' />
                <semantic-value key='&quot;Toledo&quot;' value='41.651031000000003' />
                <semantic-value key='&quot;Washington&quot;' value='38.889805000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.511452000000006' />
                <semantic-value key='&quot;Anchorage&quot;' value='-149.86312899999999' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.122780000000006' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Aurora&quot;' value='-104.8125' />
                <semantic-value key='&quot;Austin&quot;' value='-97.733329999999995' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.04373200000001' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.609382999999994' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.779633000000004' />
                <semantic-value key='&quot;Boston&quot;' value='-71.057083000000006' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878737999999998' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843124000000003' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512016000000003' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.681290000000004' />
                <semantic-value key='&quot;Colorado&quot;' value='-112.97403' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.983329999999995' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.808891000000003' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191604999999996' />
                <semantic-value key='&quot;Denver&quot;' value='-104.99153099999999' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.598022' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.045753000000005' />
                <semantic-value key='&quot;El Paso&quot;' value='-106.460953' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98857099999999' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.77259100000001' />
                <semantic-value key='&quot;Garland&quot;' value='-96.635277000000002' />
                <semantic-value key='&quot;Glendale&quot;' value='-118.25507399999999' />
                <semantic-value key='&quot;Grand Rapids&quot;' value='-85.670006000000001' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.766234999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.358421000000007' />
                <semantic-value key='&quot;Jackson&quot;' value='-90.184807000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655647000000002' />
                <semantic-value key='&quot;Jersey&quot;' value='-74.050551999999996' />
                <semantic-value key='&quot;Kansas&quot;' value='-94.578331000000006' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.176468' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.681679000000003' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.325299999999999' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.1892' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.764770999999996' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401229999999998' />
                <semantic-value key='&quot;Memphis&quot;' value='-89.971107000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83326700000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191788000000003' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.258133000000001' />
                <semantic-value key='&quot;Montgomery&quot;' value='-86.279167000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.767960000000002' />
                <semantic-value key='&quot;Newark&quot;' value='-74.172363000000004' />
                <semantic-value key='&quot;Norfolk&quot;' value='-76.285872999999995' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.271111' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.995102000000003' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165222' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.07403600000001' />
                <semantic-value key='&quot;Portland&quot;' value='-122.679565' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.644256999999996' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.434769000000003' />
                <semantic-value key='&quot;Riverside&quot;' value='-117.396156' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.610923999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.47885100000001' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493629999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.16108699999999' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.431297' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.893028' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.42604799999999' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.200000000000003' />
                <semantic-value key='&quot;St. Paul&quot;' value='-93.091301000000001' />
                <semantic-value key='&quot;St. Petersburg&quot;' value='-82.639999000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.275604' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.452606000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.541938999999999' />
                <semantic-value key='&quot;Washington&quot;' value='-77.009056000000001' />
              </semantic-values>
            </column>
            <column-instance column='[sales_date]' derivation='Month' name='[mn:sales_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
            <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative' />
            <column-instance column='[sales_date]' derivation='Weekday' name='[wd:sales_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]</column>
            <column>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' field-type='quantitative' major-origin='#2018-01-01 00:00:00#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='background-color' id='refline0' value='#ffffff81' />
            <format attr='stroke-color' id='refline0' value='#59a14fb4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1dzyclc0ve0u6q139456w050ecbv].[mn:sales_date:ok]' />
              <text column='[federated.1dzyclc0ve0u6q139456w050ecbv].[wd:sales_date:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]</rows>
        <cols>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]</cols>
      </table>
      <simple-id uuid='{685FAE87-5AE1-4336-BB0F-FBF3946BE053}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Store Performance Analytics'>
      <repository-location id='StorePerformanceAnalytics' path='/workbooks/StorePerformanceAcceleratorFINAL_17411556883400' revision='' />
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' value='left' />
          <format attr='vertical-align' value='center' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='10' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1200' minheight='1000' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Buttons' name='federated.1dzyclc0ve0u6q139456w050ecbv' />
      </datasources>
      <datasource-dependencies datasource='federated.1dzyclc0ve0u6q139456w050ecbv'>
        <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
        <column aggregation='Sum' caption='Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[price]' role='dimension' type='ordinal' />
        <column caption='Sales Date' datatype='datetime' name='[sales_date]' role='dimension' type='ordinal' />
        <column-instance column='[sales_date]' derivation='Day-Trunc' name='[tdy:sales_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='3' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='162' h='17700' id='10' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='203' h='16200' id='13' is-fixed='true' is-scaled='1' param='C:/Users/thiha/OneDrive/Desktop/DataAnalyticsProjects/GROCERY_SALES_ANALYSIS/dashboard.twb Files/Image/green_mall_logo (Logo).png' type-v2='bitmap' w='16917' x='1667' y='1500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='16200' id='549' type-v2='text' w='43541' x='18584' y='1500'>
                <formatted-text>
                  <run fontcolor='#5ab334' fontname='Tableau Bold'>Green Mall</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#5ab334' fontname='Tableau Bold' fontsize='30'>SALES PERFORMANCE</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#5ab334' fontname='Tableau Bold' fontsize='30'>SUMMARY</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#5ab334' fontsize='12'>from January to May 2018</run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='16200' id='550' type-v2='text' w='36207' x='62125' y='1500'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='12'>United States Region</run>
                  <run fontalignment='1'>&#10;Sales Data Across 96 Cities&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='margin-top' value='15' />
                <format attr='margin-right' value='20' />
                <format attr='margin-bottom' value='0' />
                <format attr='margin-left' value='20' />
              </zone-style>
            </zone>
            <zone fixed-size='66' h='8600' id='14' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='17700'>
              <zone fixed-size='192' h='6600' id='533' is-fixed='true' mode='checkdropdown' name='Map' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]' type-v2='filter' values='database' w='16667' x='1667' y='18700'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='192' h='6600' id='532' is-fixed='true' mode='checkdropdown' name='Map' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]' type-v2='filter' values='database' w='16667' x='18334' y='18700'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6600' id='555' name='Sparkline - Sales' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]' type-v2='filter' values='database' w='31666' x='35001' y='18700'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6600' id='545' name='Sparkline Customers' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' type-v2='filter' values='database' w='31666' x='66667' y='18700'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin-top' value='10' />
                <format attr='margin-right' value='20' />
                <format attr='margin-bottom' value='10' />
                <format attr='margin-left' value='20' />
              </zone-style>
            </zone>
            <zone fixed-size='29' forceUpdate='true' h='4900' id='15' is-fixed='true' type-v2='text' w='100000' x='0' y='26300'>
              <formatted-text>
                <run fontcolor='#1b1b1b' fontsize='10'>What are our total sales for the current period? How many units have been sold? How many walk-ins do we average? </run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='margin-right' value='20' />
                <format attr='margin-bottom' value='20' />
                <format attr='margin-left' value='20' />
              </zone-style>
            </zone>
            <zone fixed-size='1' h='100' id='309' is-fixed='true' type-v2='empty' w='100000' x='0' y='31200'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#333333' />
              </zone-style>
            </zone>
            <zone fixed-size='450' h='22800' id='16' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='31300'>
              <zone fixed-size='398' h='22800' id='19' is-fixed='true' param='vert' type-v2='layout-flow' w='33167' x='0' y='31300'>
                <zone fixed-size='62' h='7800' id='544' is-fixed='true' name='Total Sales Title' show-title='false' w='33167' x='0' y='31300'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='8' />
                  </zone-style>
                </zone>
                <zone h='15000' id='32' name='Sparkline - Sales' show-title='false' w='33167' x='0' y='39100'>
                  <layout-cache minheight='129' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin-right' value='0' />
                  <format attr='padding' value='0' />
                </zone-style>
              </zone>
              <zone fixed-size='1' h='22800' id='305' is-fixed='true' type-v2='empty' w='83' x='33167' y='31300'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#333333' />
                </zone-style>
              </zone>
              <zone fixed-size='398' h='22800' id='21' is-fixed='true' param='vert' type-v2='layout-flow' w='33167' x='33250' y='31300'>
                <zone fixed-size='62' h='7800' id='546' is-fixed='true' name='Total Customer Title' show-title='false' w='33167' x='33250' y='31300'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='8' />
                  </zone-style>
                </zone>
                <zone h='15000' id='542' name='Sparkline Customers' show-title='false' w='33167' x='33250' y='39100'>
                  <layout-cache minheight='131' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin-right' value='0' />
                  <format attr='margin-left' value='0' />
                  <format attr='padding' value='0' />
                </zone-style>
              </zone>
              <zone fixed-size='1' h='22800' id='308' is-fixed='true' type-v2='empty' w='83' x='66417' y='31300'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#333333' />
                </zone-style>
              </zone>
              <zone fixed-size='398' h='22800' id='538' is-fixed='true' param='vert' type-v2='layout-flow' w='33167' x='66500' y='31300'>
                <zone fixed-size='62' h='7800' id='547' is-fixed='true' name='Total Quantity' show-title='false' w='33167' x='66500' y='31300'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='8' />
                  </zone-style>
                </zone>
                <zone h='15000' id='35' name='Sparkline - Units Sold' show-title='false' w='33167' x='66500' y='39100'>
                  <layout-cache minheight='128' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding-top' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
              </zone-style>
            </zone>
            <zone fixed-size='1' h='100' id='548' is-fixed='true' type-v2='empty' w='100000' x='0' y='54100'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
            <zone fixed-size='266' h='22800' id='489' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='54200'>
              <zone fixed-size='497' h='22800' id='496' is-fixed='true' name='Map' show-title='false' w='42084' x='0' y='54200'>
                <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='1' h='22800' id='529' is-fixed='true' type-v2='empty' w='83' x='42084' y='54200'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#000000' />
                </zone-style>
              </zone>
              <zone fixed-size='313' h='22800' id='495' is-fixed='true' param='vert' type-v2='layout-flow' w='26750' x='42167' y='54200'>
                <zone forceUpdate='true' h='3100' id='494' type-v2='text' w='26084' x='42500' y='54600'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='12'>Top 5 Cities with Highest Sales</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='18900' id='556' name='Sales by City Rank' show-title='false' w='26084' x='42500' y='57700'>
                  <layout-cache cell-count-h='5' cell-count-w='1' non-cell-size-w='172' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='8' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='1' h='22800' id='528' is-fixed='true' type-v2='empty' w='83' x='68917' y='54200'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#000000' />
                </zone-style>
              </zone>
              <zone h='22800' id='511' param='vert' type-v2='layout-flow' w='31000' x='69000' y='54200'>
                <zone fixed-size='18' forceUpdate='true' h='2600' id='512' is-fixed='true' type-v2='text' w='30334' x='69333' y='54600'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='12'>Top 5 Customers by Sales</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19400' id='510' name='Customer Rank' show-title='false' w='30334' x='69333' y='57200'>
                  <layout-cache cell-count-h='5' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='8' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='1' h='100' id='314' is-fixed='true' type-v2='empty' w='100000' x='0' y='77000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#333333' />
              </zone-style>
            </zone>
            <zone fixed-size='600' h='22800' id='77' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='77100'>
              <zone fixed-size='607' h='22800' id='80' is-fixed='true' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='50583' x='1667' y='77100'>
                <zone fixed-size='198' h='22800' id='212' is-fixed='true' param='vert' type-v2='layout-flow' w='50583' x='1667' y='77100'>
                  <zone forceUpdate='true' h='3900' id='527' type-v2='text' w='48916' x='1667' y='77100'>
                    <formatted-text>
                      <run fontcolor='#1b1b1b' fontsize='12'>TOP 10 PRODUCTS BY SALES</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='8' />
                    </zone-style>
                  </zone>
                  <zone h='17900' id='93' name='Sales by Product Category' show-title='false' w='48916' x='1667' y='81000'>
                    <layout-cache cell-count-h='10' minwidth='420' type-h='cell' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='0' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin-bottom' value='0' />
                    <format attr='padding-top' value='0' />
                    <format attr='padding-right' value='20' />
                    <format attr='padding-bottom' value='10' />
                    <format attr='padding-left' value='0' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone fixed-size='1' h='22800' id='320' is-fixed='true' type-v2='empty' w='83' x='52250' y='77100'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#333333' />
                </zone-style>
              </zone>
              <zone h='22800' id='526' param='vert' type-v2='layout-flow' w='46000' x='52333' y='77100'>
                <zone forceUpdate='true' h='3900' id='530' type-v2='text' w='46000' x='52333' y='77100'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='12'>SALES BY PRODUCT CATEGORY</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='8' />
                  </zone-style>
                </zone>
                <zone h='18900' id='517' name='Category Pie Chart' show-title='false' w='46000' x='52333' y='81000'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin-right' value='20' />
                <format attr='margin-left' value='20' />
              </zone-style>
            </zone>
            <zone fixed-size='1' h='100' id='315' is-fixed='true' type-v2='empty' w='100000' x='0' y='99900'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#333333' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='0' />
            <format attr='background-color' value='#f7f7f7' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2550' minheight='2550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='608' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='607' param='vert' type-v2='layout-flow' w='98666' x='667' y='800'>
                <zone fixed-size='162' h='16200' id='13' is-fixed='true' is-scaled='1' param='C:/Users/thiha/OneDrive/Desktop/DataAnalyticsProjects/GROCERY_SALES_ANALYSIS/dashboard.twb Files/Image/green_mall_logo (Logo).png' type-v2='bitmap' w='16917' x='1667' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='16200' id='549' type-v2='text' w='43541' x='18584' y='1500'>
                  <formatted-text>
                    <run fontcolor='#5ab334' fontname='Tableau Bold'>Green Mall</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#5ab334' fontname='Tableau Bold' fontsize='30'>SALES PERFORMANCE</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#5ab334' fontname='Tableau Bold' fontsize='30'>SUMMARY</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#5ab334' fontsize='12'>from January to May 2018</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='16200' id='550' type-v2='text' w='36207' x='62125' y='1500'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='12'>United States Region</run>
                    <run fontalignment='1'>&#10;Sales Data Across 96 Cities&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='29' forceUpdate='true' h='4900' id='15' type-v2='text' w='100000' x='0' y='26300'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='10'>What are our total sales for the current period? How many units have been sold? How many walk-ins do we average? </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='7800' id='544' is-fixed='true' name='Total Sales Title' show-title='false' w='33167' x='0' y='31300'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='7800' id='546' is-fixed='true' name='Total Customer Title' show-title='false' w='33167' x='33250' y='31300'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='7800' id='547' is-fixed='true' name='Total Quantity' show-title='false' w='33167' x='66500' y='31300'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6600' id='555' name='Sparkline - Sales' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]' type-v2='filter' values='database' w='31666' x='35001' y='18700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='142' h='15000' id='32' is-fixed='true' name='Sparkline - Sales' show-title='false' w='33167' x='0' y='39100'>
                  <layout-cache minheight='129' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6600' id='545' name='Sparkline Customers' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' type-v2='filter' values='database' w='31666' x='66667' y='18700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='142' h='15000' id='542' is-fixed='true' name='Sparkline Customers' show-title='false' w='33167' x='33250' y='39100'>
                  <layout-cache minheight='131' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='142' h='15000' id='35' is-fixed='true' name='Sparkline - Units Sold' show-title='false' w='33167' x='66500' y='39100'>
                  <layout-cache minheight='128' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='6600' id='533' mode='checkdropdown' name='Map' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (Category Name)]' type-v2='filter' values='database' w='16667' x='1667' y='18700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='6600' id='532' mode='checkdropdown' name='Map' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[Action (City Name)]' type-v2='filter' values='database' w='16667' x='18334' y='18700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='22800' id='496' is-fixed='true' name='Map' show-title='false' w='42084' x='0' y='54200'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3100' id='494' type-v2='text' w='26084' x='42500' y='54600'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='12'>Top 5 Cities with Highest Sales</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='18' forceUpdate='true' h='2600' id='512' type-v2='text' w='30334' x='69333' y='54600'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='12'>Top 5 Customers by Sales</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='178' h='19400' id='510' is-fixed='true' name='Customer Rank' show-title='false' w='30334' x='69333' y='57200'>
                  <layout-cache cell-count-h='5' cell-count-w='1' non-cell-size-w='248' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='173' h='18900' id='556' is-fixed='true' name='Sales by City Rank' show-title='false' w='26084' x='42500' y='57700'>
                  <layout-cache cell-count-w='1' non-cell-size-w='172' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3900' id='527' type-v2='text' w='48916' x='1667' y='77100'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='12'>TOP 10 PRODUCTS BY SALES</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3900' id='530' type-v2='text' w='46000' x='52333' y='77100'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='12'>SALES BY PRODUCT CATEGORY</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='171' h='17900' id='93' is-fixed='true' name='Sales by Product Category' show-title='false' w='48916' x='1667' y='81000'>
                  <layout-cache minwidth='420' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='181' h='18900' id='517' is-fixed='true' name='Category Pie Chart' show-title='false' w='46000' x='52333' y='81000'>
                  <layout-cache cell-count-h='1' cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#f7f7f7' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2E8A2AA6-C501-4C1B-A611-BDDEC8FE7AE5}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_6' value='#00000000' />
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
          <format attr='border-width' id='story-description_7' value='0' />
          <format attr='background-color' id='story-description_7' value='#00000000' />
          <format attr='border-style' id='story-description_7' value='none' />
          <format attr='font-style' id='story-description_7' value='normal' />
          <format attr='font-weight' id='story-description_7' value='normal' />
          <format attr='text-decoration' id='story-description_7' value='none' />
          <format attr='border-width' id='story-description_8' value='0' />
          <format attr='background-color' id='story-description_8' value='#00000000' />
          <format attr='border-style' id='story-description_8' value='none' />
          <format attr='font-style' id='story-description_8' value='normal' />
          <format attr='font-weight' id='story-description_8' value='normal' />
          <format attr='text-decoration' id='story-description_8' value='none' />
          <format attr='background-color' id='story-description_9' value='#00000000' />
          <format attr='border-width' id='story-description_9' value='0' />
          <format attr='border-style' id='story-description_9' value='none' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='8195' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='830' />
            <zone h='90145' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='9025'>
              <flipboard active-id='4' nav-type='arrowonly' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='sales by days' id='4'>
                    <currentDeltas>
                      <worksheet name='sales by days'>
                        <filter class='quantitative' column='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' included-values='in-range'>
                          <min>#2018-04-01 00:00:00#</min>
                          <max>#2018-04-30 23:59:59#</max>
                          <target field='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' />
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point captured-sheet='sales by days' id='5' />
                  <story-point captured-sheet='sales by days' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='2905' hidden='true' id='7' story-point-id='5' type-v2='text' w='25394' x='21260' y='10373'>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Segoe UI Black' fontsize='12'>Highest Sales Day - February 24</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='2905' hidden='true' id='8' story-point-id='6' type-v2='text' w='34547' x='21850' y='10581'>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Segoe UI Black' fontsize='12'>Highest Sales Day - February 24 - Saturday</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3112' hidden='true' id='9' story-point-id='6' type-v2='text' w='31988' x='63780' y='87137'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Segoe UI Black' fontsize='12'>Lowest Sales Day - April 25 - Wednesday</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3008' id='10' story-point-id='4' type-v2='text' w='15551' x='7677' y='68257'>
          <formatted-text>
            <run bold='true'>$33.27 Million</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{965FF893-8773-4A94-AB1B-50A535B61328}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Store Performance Analytics'>
      <viewpoints>
        <viewpoint name='Category Pie Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Customer Rank'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Sales by City Rank'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Product Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sparkline - Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sparkline - Units Sold'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sparkline Customers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Customer Title'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Quantity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales Title'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9C29AFB2-43BE-49BE-8355-A96EC36C787C}' />
    </window>
    <window class='worksheet' name='Top Selling Products by cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{72FE8208-DB01-44D0-AC54-58D640D68D34}' />
    </window>
    <window class='worksheet' name='Discount vs Sales by City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F9EBF95B-073F-4DB0-ABDC-06FC3EFA913D}' />
    </window>
    <window class='worksheet' name='sales by days'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[mn:sales_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1dzyclc0ve0u6q139456w050ecbv].[mn:sales_date:ok]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9FA5F2E-8E5E-48BA-89D4-68BBCDC48CC7}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{419A1506-A8A3-4062-B94A-A00D31DCDAD7}' />
    </window>
    <window class='worksheet' name='Sales variations of products by city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922145566721:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40F412D5-D118-4A54-AD62-4586D2CA645D}' />
    </window>
    <window class='worksheet' name='Visit Freq Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1362057470892826625:ok]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922150797315:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FB3DA77-4B6A-4489-9E5B-1A3F3050EA75}' />
    </window>
    <window class='worksheet' name='City by Sales Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:ok]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922153512967:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B936D10-0D44-4305-80EE-2B5632811101}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FF4983C-9611-47D8-9E63-0D481EFDD6E5}' />
    </window>
    <window class='worksheet' name='Visit Freq New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:Calculation_738308922220785672:qk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:Calculation_738308922223673363:qk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:Calculation_738308922223722517:qk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[none:customer_id:ok]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:ok]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_738308922221199370:ok]</field>
            <field>[federated.1dzyclc0ve0u6q139456w050ecbv].[yr:sales_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B7D3942-B883-4CA7-8B25-B03374F3A944}' />
    </window>
    <window class='worksheet' hidden='true' name='Category Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='264'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:category_name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6AD99090-35F6-4B38-9743-86D4825EEEFE}' />
    </window>
    <window class='worksheet' hidden='true' name='Customer Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E1DE0A31-B3AB-491F-8CA9-9D44628D2E81}' />
    </window>
    <window class='worksheet' hidden='true' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[sum:total_price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{11204F7B-A61F-43C9-9A05-4859F7B4F9F3}' />
    </window>
    <window class='worksheet' hidden='true' name='Sales by City Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:city_name:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7255D7BD-8DC9-48F3-8BC4-BEA01044DA97}' />
    </window>
    <window class='worksheet' hidden='true' name='Sales by Product Category'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{830AF486-18D8-4801-A409-47061521F5A5}' />
    </window>
    <window class='worksheet' hidden='true' name='Sparkline - Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dzyclc0ve0u6q139456w050ecbv].[none:price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702511702016:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{1F4C3C9C-8E0D-431E-A867-7F494854DDBA}' />
    </window>
    <window class='worksheet' hidden='true' name='Sparkline - Units Sold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1434678010924879872:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{74E394FC-94A9-486C-A2E3-A897D2610F45}' />
    </window>
    <window class='worksheet' hidden='true' name='Sparkline Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dzyclc0ve0u6q139456w050ecbv].[tdy:sales_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1dzyclc0ve0u6q139456w050ecbv].[usr:Calculation_1230045702514966529:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{94D6E67D-7FC4-4526-BE31-DD25E94BB36A}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Customer Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EE046F9B-D1F2-493F-A61A-88527AC219DC}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A84AC522-3481-4B32-8A85-D00A854F75CA}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Sales Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A2730FE6-8497-4633-963C-DC8FF6269007}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='City by Sales Rank' width='192'>
      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
      J4DPa83/D+XJ7RdneW97AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Discount vs Sales by City' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy913Mc55W//3T35MFgkGeQEwmCJACCAAlmShQYJAZZkmVL+trrsstb+gd2
      q/ZmL9a1Vb7/1V5s8q5WtlxWDhRlJjBHEDkQOceZwWAwAZNnun8XoEaWKEokIYkUgacKBRLo
      8E6jT/f7nnM+5wiKoiisssoKRBAEQXzUg1hllUfJqgGssqJZNYBV7mIlzYpXDWCVu5idnX3U
      Q/jBWDWAVVY0qkc9gFUeXxRFSUyHBEFAEIQf/Lzf1blPnDiBLMt3/XzVAFa5J86R6/x/fziN
      1ZJMUuF2XjlQTmvPDHV1Vai/x/P67UN88ulHXGqaY8fhQ7xy+BkMms8NwEfTtTGqd1SifoD5
      iyRJX2tEqwawyjdSvv0QvzxWw/t/+HeG50oRdVoi8+N8fOIcuvzNHNhVyo3Tf8UhWKjfVsbl
      s2fRFWxm/+ZcOqcCbCkw0DwRJD1uo3d4HFc8meefqydZJ93znEnWtfzitZfwRHt57YX94Jrg
      3c/OYSqtY412mP/57wb2eH7OoYp0Tp67SnLRFo48VY1KvPdbIh6PJ94Ax44dSxjD6hpglW9H
      0KE3CHidMzR1DzHYdoU5VQ6VZbl0XT6BL6OWFw/WcevsxxTt+gmaqSaab/fTOjAFwXlaB6cY
      7+lAv3YnmaFJBhzeBzr9Z598QtWBl5F7zuOzrmNz5U5eOrQb5AiKDKfef5fZQOQbjyFJUuLr
      b1k1gFW+EUWR8czeZsBhoNCSBEDJpn08tV7P22++hTMkIMsycVkGBOLxGLKiIAgCsVCQedc8
      oXAMJA1Ggw61WgUoyLKMoshL379lDKJw5wmugCBIRGN+ItEYl09eoPK5F9hUlI6CQjxxTOWu
      Y8ZiMUpKSjhy5MiXpkKrBrDKPTGmFaD3DnD8ygg//82vsKRnsL2qjPCik/auUTY/fZD6g8dI
      83bx2flWth96kZnmUyhFO9hSs5lNJi83h/3UVRRTvKGa3BQ9JRs3k2uIcO3qTZyzY1xvH+Tu
      pSmgSaOurhwVcPiFF+m7dBxt1QEqraXs22Pl/JVmdh7cR8+lKxTXbMeMmwuXW3BP9nCzZ+qu
      w6nVakTx7ttdWM0FWuWrzMzMkJOT86iH8b0jCILwpUXwqi2sAne7Ib+OeDwOkJhTx+NxBEFA
      FEWUO1Ogz7//7XE///+9tnmYscqynDj3V8+1NNVSkCTpS+f8nLu8QDab7aEH87ggyzKxWOxR
      D+OehIMBRLUWx8QkGSVFaB/1gL5CJBIhGAze8/fBYJCzZ89it9v52c9+hlqt5ty5cxQVFbFh
      wwYGBwcpKytjfHyc/Px81Go1Pp8Pn89HTk4OsVgMm81Gbm4uAwMDFBYWotPpHmqss7OzfPjh
      h6xdu5b6+nokSSIajTI5OUlxcTFXr14lEAiwf/9+pqenyc/Px263J/b/ximQIseREZG+xr20
      ZHkKkvTdLSNkOQ6CiLjMoEc8HiccDn9Ho/ru8cwM0dwzSmrBBmrKch/1cO5ibm6OzMzMb9wm
      HA4TCARITU39gUZ1b1wuF0lJSWg0mgfaz2g0Ct9oAH1n/p0m41H+blf+Xb/zu7v583vTHNqW
      RDxnCyUZy3+O3Tr1RwJFh7D6hzCvqSPb/HDhFlmWE6/oVR4cm82G1Wp91MP43tFoNMK3B8IU
      mY6LF5jyO/CQx8+fraPryl+52TdIUKoEFDRqiZ4bp7l+20bNvufIF6a4eXsKlzfCs8cOM950
      hs4JP3sOHUU3305Tr42Ywcrzh3Yy0XKRGwPz7Dl0JHFKQQBJiHLt1Cf0L0gcOXwEi/n+rVsU
      xa9d8a9yf0iShFr9fcZ6Hx++/S5RZPqa2liz9whKdwvDk41cHE/mlz87gBGFqZ5GZn0KkUiE
      aMDBOx+fxDXRw2JKBZstfhr7HUSiUYLzg3x08gYzQ52kV+1nrTjGpw2Xudzv5+Vna/j045NE
      AYgz0tXM1OQEN3um2VRdRZL2h8lBWeX+CYVCOJ3ORz0MYGnK9rBT3vt6TAqCFqNRg1pSgaIg
      SiKhQPDODQvRoI9z7SP89MWjpOkVEEQMRgNqlZqAe5KW0RAvHNmHSaWAICAi4w+F0Wo1KEqc
      SDSK8JUntjollxcO19PT8AGXe5e3MB9svcSnJ07Q1D1G7F4zvuA8Mwuhex4jMDeHO7IUbZya
      GCH6DTMs28zMXb5tv32EjmEb95xwKgozd9KQFTnOrfPH+fTTE3QM2++xwxcekL8lEnTS3NaP
      whfrtKVjyvc+9wMSi8W4cOECb731Fna7HZ/Px7vvvktjY2NiPIqicPv2bd544w3Gx8eZmpri
      j3/8I52dnUSjUcbGxpBlme7ubiKRb47ifhNer5e//OUvnDhxgmg0yvXr1/nDH/5AV1cXkUiE
      Dz74gE8//ZRYLMbw8DCKojAyMsLCwgLwLblAmWu3sVmViqTZTrIgUblnG9kFlWwb/JSLHTq2
      bV1PtiYN0WIiqaaMKx0z7NpeQ0aGxAZNEqkZm6iVrDhx0joeY3ttGaGeLq6eOU5N7Q6O7dzA
      WNtVTl3p58UXD6P2DhMzJxOt2YlRF6O7uRtVbhVb1y5vPipjov7IboZbbmKbzyQ7RYsCCdeY
      osgIwQVsXhXZZg2KINy1EA+6XPgNBlI0GmZnJknLLkZU4siASpJAUYjF44iSCofNRma2FVkR
      7mQyQv+EE38shlxsQVQUZEVGVj7fd8lrNWOzkZOdjSIraDOKOPZMFaCgyDKxeBxJUiEIEI/H
      QJAgEqBzcIyqDetRqSRAwTMxgtsVYy6sYAjaGLdFWLc2D0dfK7GCzeQZpTvOjaVzP4wLcmJi
      AoB9+/ah0+m4desWdXV19Pb2Yrfbyc7OxuFwMDg4yGuvvYaiKJw7d44XX3yRmzdvkp6ezuTk
      JD6fj2g0uqzp1rVr16itrSUvLw9FUSgqKqKuro53330Xl8vFli1biEajtLa2sri4iNVqpaWl
      hZdffhl4BIGw6cFWyKwgN+XBVuzLoa+lmZzKCkY7WkhKzWCgf5B4TKa4Zg/C5C2G3SLV5dnY
      IsmIHgcFGyvJTNIQi8ZAlJAkEVd/K+f6xtCLajxhOLa3iiuNXSBHKa6th+lbjM1HKSivJe4a
      Q6eWUWWupzTbjECQmzf7yNIE0W7YhtR3g+tzfuQ5Dzt/+jOmb3yKI6QmKJp4+dBu5FiUv37w
      JooxmzVV28DZy8iMG51lDTVZCjd6RlEUPaWFydxo7qFww1ae2boeJR6mpambkhIjE64UVO5O
      2oYWKKuqxH37Bp6UEnZsrmTy9k3mAgIba3ezJsd81/X6tkDY4uIiH3/8MX6/n9dee42mpiZ2
      797NyMgIkiRRVlbG7du3uXnzJpIksX//fjo6OpicnCQQCHDo0CHOnDlDZmYmr7zyyrIMYHh4
      mI8++ojNmzfz9NNPMzU1xcmTJ9m4cSNWq5XTp0+j0+kwm82Iosjw8DCvv/46KSkpCIIgSP/y
      L//yLw999ocgOT37GzMBvw9Guq5ze8xGak45uqiHzJJNbN2QSe+YD4MqRuX2PWSpFrl0tRlT
      wXrKclIRhBBtV68xF9FhyTARmvdiqa6hrqKCsNdGzBPBumUbdRUWBrqmicZV7K3fizXVyO3G
      szjIZktFMZIoEJzu5FTjICHfDA7ZSo4QJW/XLjboIywYTEQXdezdvZWw30221YoiK4TQsHfP
      HtIMEtcvn0NtTEXQGghODbOAGq1aonhdLSaTge2b1iMIApGAkysXLzHr8GL3x9leu4Ekcy6b
      1pdgUkNe9Q7SJS8jwzai4SAxXQqF1rvdmD6fD5PJdM/rqVKpKCwsBGB0dBQg8dRPSkoiJSUF
      j8dDeno6u3fv5sqVKxw5coStW7cSiUTIzMzEaDQiiiLJyckkJSU9dDDMbDaTkZHBwsICkiRR
      WFhIZWUlra2tbN26lR07dpCXl4fP50Ov11NTU8Po6CgFBQX87ne/+92KcJWkWNZQf+gglWuy
      sVoz6Gu5xPHTTVhy0tHq9HdiGQIbdh3EEplg2OZDQU/tU8+weV3O0kJJEPj8TySKItbSbG5f
      bOD48etkrCkh3eDns09P0DniwFKymZ1r9LT0TKIoCkNTIV79u5d5/tVfkewfA0FEAARBRBCM
      BOc6+ezUWaZcXwSfPp+CiZKKguxsQtEYoqiiqCyfyGIYBQFREliY6KXhVg8A/rlpNh38f7zw
      4guUm2BRlhjuukpL/zSiFOXqmbNMLwSIRqNIWj0aSWRush93IMzI0AT3Gzq02+386U9/4tKl
      SyQnJ5OXl8f//d//0dXVRUZGBl1dXeTk5DAwMMBbb72FxWKho6OD//iP/8DlcpGVlYUkSTzz
      zDM0NzcTCt177fVtNDY28v7779PX14der+cvf/kLb775JoFAAK/Xy//8z//wzjvvsHXrVkRR
      pLy8nGg0yvT0NLCaC7TK13A/uUBerxeHw8GaNWt+oFHdm4GBAXJyckhKSnqg/QRB+OZA2Cor
      kxWbDPekEIlE8HofTHSxyhcEAoHHxsf/ffNEGoAkSRgMhkc9jB8tfr9/xVy/FbEIXuW7wel0
      PjZJhjMzM99J+v4T+Qb4W8JeB41NrSyGZTTJmezYWoNR+4UbVpZlBFHky064KFNjDqxFuU/+
      BboPFEVhcnKSjz/+mHXr1vHMM88wPDzM3Nwcu3btQhRFRkdH6e7u5tChQ4mszGAwyMmTJ9mx
      YweRSISrV69SWVnJ2rVruX37NlVVVTQ1NbFlyxa02vtLplQUhZaWFs6fP8+RI0dIT0/n1KlT
      KIrC4cOHkSSJGzducPDgQQRB4J133iEWi1FXV8fi4iKbNm2ir6+P7OxsYAW8AbTJWeyt30mm
      uYCndm/FoBGIRiJEY3HkeIy+9nYWI1FkOb6UzxSLoSgx7NOOr5fqrUDi8TgNDQ1s2bKFsrKy
      xBphcHAQRVnKA7tx4wbDw8MJHYaiKLS3tzM8PIzD4eD06dMcOnSItrY2pqam6O7uprm5mWAw
      +EBpzD6fj5aWFp566inS0tLo7++nvLyc3/zmN1gsFqamphgZGSESieB0OhEEgV//+tds3LiR
      rq4u3G43ly9fJiMjA1gBBvBVHKPdXLhwiYZzVxgdG6avt5em9h5c9imuXTrP6Ys3WAytplL/
      LZIkUVJSwsWLF3G73ZhMJjZu3IhKtfR+7O7uJi8vj+Tk5MQ+Pp+PyclJysvLkSSJjIwM3n//
      fcbHx3G5XIyMjHDp0iW2bdv2QEEwg8GA0Wjk8uXLCIKAz+fjypUrnDhxgnA4THV1dWL9sri4
      SG9vL2+//TZer5dIJMK//du/ceDAgUS28IozgAWPj9o99WwrsxDRp7OxooKdW6uIBb0gqgm6
      5vGEHj4560ll9+7dPPvsszQ2Nn6pdmgkEqGhoYGOjg7a29sTkeGmpib6+/u5efMmbW1tHD16
      lNdff52CggIMBgPFxcXk5eUxPj7+QHN5URR59dVX2bp1K++88w719fX84z/+I9FolM7Ozi9t
      W1payr/+679SWVnJiRMnUKvV/OQnP6G5uTmxzQqZ4gqId5RrGempNF08RVxlZPuuUmbGmrl8
      LcaaTJFwJIbOoEcUSGy/CkSjUY4fP87AwABpaWmEw2FOnTpFb28vFouFf/iHfyAej/POO+9g
      tVq5evUqe/fupb6+noaGBnJzc2ltbaW9vZ2UlBRycnLQaDQcOnSId999l6KiovsOYnm9Xt57
      7z1sNhvl5eW0trbS39+Py+Vi27ZtfPTRR/T09PDee++xdetWmpubWVhYoL6+nra2NtavX09X
      VxfDw8PAExoJftwlkY8795JE9vb2Ulpa+sDSw++Dzs5OKisrlyWo/1ZJ5I+VVQNYHvejCX4S
      MBqNd5dFeRJqw69qgpeH3+9/1EP4wXgi3wCrLI+VlAt0z5WeoiiEAn78/qWvWHzVTlb5glAo
      xNzc3KMeBgAOh+Ohp7z39AIpcpxb5z7g009uUFz/NM8dfIHi9MethNO3E/LYuX6zEW9QQZuS
      xe5ttRi0KqS7qkZEabvRTOGmWtIMGqb6buHWr6GiMO1rjxuPxRAkadk1jH6MRKNRzp07x8DA
      AK+99hpJSUncunWLiooKsrKygKUHaFdXFy0tLezbtw+z2czJkydZs2YN1dXVTE1NUVhYyO3b
      tykvL3/ohbXb7eYvf/kLubm5HD58mA8//JBAIIBGo+HVV1/l0qVL+Hw+nn/+ecbHxyktLWV4
      eDgRCLunAYiSir1H/h/2fi87XnuFLO8Ebb0aNuRE6J3VUGL2cPzkVbKr9mAJD3Gzf55dh46R
      6h/k5JVu1tY9Q2WKl/OtI7jdfvYde4mitIer/rUcdGYLzxx6ihuXxtnyVBXhuRkcoWSyTBoi
      0TgqtRaVSkQgRmxhjiGbm63FydiGhpgvzGdDLEo4GkNSaVBLEJcV4rKCd2YadXYuSYJMNK6g
      1mq/sT79k8Tk5CSCIFBfX4/BYGB+fh69Xk8gEEhs43A4GB0d5bXXXkMQBC5cuMBTTz1FW1sb
      DoeD6elpFhcXkWV5WZLIGzduUFtbS0FBAWq1ml/+8pfEYjHOnj3L2NgYJpOJ/Px8WlpaCAaD
      WK1WOjs7eemll4AHCITF/Hb6xlxEF230D8/w/geneOrlv2PH2jQu32xnbeUmUlUBPmpo5cXX
      XmL47HEGJ0Zwakt4eq2O6z3TD/0hv0sWnS58kQjTA22ca2jgcmM3sTuzO521AGFuGp99EiGr
      EJ0IcxO9nG9o4Ny1ZsLOQY6fuUxT9xA2h4NoTKa/9TINDado6p761jLfTwoWiwWPx8P169eR
      ZZnCwsLEE/VznE4nc3NzvP3229hsNlQqFVlZWeTn5+P3+2lubqazs5ONGzcuy5VZXl5OY2Mj
      /f39ieP09PSwdu1a3G435eXlrFmzBo/Hw8LCAv/+7/9OfX39wzXICHgXsE3PEkFAK4HPt0gw
      ruLI0aP4R67ycUMPakHG61skJkhIoojeoEetetzibTHcC340Oh0u+yThhMNIR3KSQN+4m0Lr
      kljc7V5Ao9PhnJslEpWxrq1mV816VCJAgAWPjF6nxjY5zUrxO+n1eg4dOkRFRQW3bt362m00
      Gg01NTX89Kc/paWlhXA4TDgcTuT+1NbWkp6ejt1uX1ZWZ35+PocPH0aWZSYmJhLfi4qKUKvV
      eL1e/H4/Go2G1NRUnn/+edrb2xPn/OY7UxDZtG83ZkCbUU6R7hTTcgF1Gwsp3PlTzjScZaFs
      CwbPJF4ph+fqd2IO5dJw6QZbXniZUsMiumgaZlUFNfGvn0v/MAhIqqUMUFGSkAQBOR4jEhcw
      6LV3MkGXosV5GSb6bQ42GfWoAgLIcYIRmSSDHkEQMep1CHeOIyAQj4WJarXotSpWxgRoaXrz
      /vvv4/V6OXDgAE1NTVy4cAFJknj++ecJhUKUlpby2WefcevWLTZt2oTJZOLNN98kPT2dDRs2
      YLPZ2LdvHw0NDaSnp6PX6x9qLM3NzZw7d47k5GS2bNnC6OgoJSUlSJLE+vXrefPNN4lGo7z6
      6qv09fVRVlbG7OzsqiZ4lXtzv5rgubk5SktLf6BR3ZvBwUFycnIwGo0PtN+qJniVr2UlxQEe
      t8n5d8Lj3h/gcScejy+rXOGPiSfSABRFWTWAZbCSHiCrOb8/EPF4/DsrTvs48MRHgp8YFIW5
      yX46+6fILFpPYboOQWck2fCVoJwcJyqDWvXgZRvjQQ9NTc14o1pqd2wjGT/dHUMUb91MikoC
      JUJf3yjrN5Qx29+CJ6mM9TkGeluuMxNOZs+OTWh+REG0aDTKxYsXGR4e5uWXX8ZoNNLc3MyG
      DRsSkWBYqiJ98eJFqquricfjXLx4kbS0NHbv3o3NZqOgoICenh7Ky8sfOhjmdrt5//33ycnJ
      4ciRI3R3d9Pe3k5WVhalpaXcuHEDWZaprKwkLS3t/iPBTwxxD/3jAXY+/RRBj4dFrwc5qqAS
      QKfTosTjxONxxLifCTcUWZKJRqIgiIAMogqtSiQciSArAjqd9q70B0UR2Vi3F014gqaeGdZl
      C5i1WoKKTAoSYec4qrQClOAcY3YHciiPgDKCJ3kjdYYJ2gcXqFv3KN3ED8b09DSiKPLUU09h
      MBhwu90YjcYvlThUFIXBwUGmp6dZu3Yt8Xicw4cP09XVhd1uZ3Z2lsXFRYCEtPJhuHXrFtXV
      1RQUFCAIAnNzc/ziF79IpFaUl5fT19eHSqVienoai8VCT08Px44dA1bCFEhlwmoKc/H8JVwR
      CZUSoLejjcvnLzPl9tN97SyXb7bids9hc4cY72/hxrVGzp45yc1bLVy53szC1ADnrt/ixqVz
      9E4tFdyKhIMEQxEUBVQGE7a+G1y4OUbJWisZuQWY/qYA8LgjTGGWhr7eMSo3rUMAvE6ZwtI0
      knLXIHodj+jiPBxZWVl4vV4aGxuJx+Pk5eWRnp7+pW0CgQAOh4P169cDUFxcjNvtJh6Pk5aW
      RltbWyIPaLmR4JaWFvr7+4GlpnlvvfUWXV1dif4Jo6OjifP/4Q9/YO/evYlz/uDVoX8IFEX5
      Qg+gQHJmLmtLcpns70HRpVCwZh3FZiMhnYaYP0RVXR1mxcekT4VJJ7K2rBKDXqBs/WY0cTda
      SYchfx21ZSlMTIXJtSYzNdTJqDOMJTMN5Dhp1kJy0kUGRz3kZqcRnJtDTk/HJEaYdQTJ0CzQ
      cKOfefskw6NeSoq0LKqtpOJidkFNrvXuMuWPikAg8I0+dVEUyc3NRRAEJiYmKCkpYWFhAVEU
      MZuXPkdjY2NCrhgIBNDpdLhcrkSR2s9zgPR6PSaT6aGNwGAwkJaWhtfrRZIkdu7cSXV1NVev
      XqW0tJSpqSm0Wi1WqxW73U5tbS3Dw8MUFBTw+9///ncrYAoUpKOxCediCENqHpmapaYQwp2I
      sE5nQJIEECRUKhHpTtMISZT+JuIbpevmJYYkicptewEoLK+l8M4pPLZxmjsHicpxctZuYby7
      kfbOYZSxMaqKi9Bll6JJ0/J3v1wL/nEax/Tkl2poOHOKIUWidt+hR3V1Hgqn08knn3yC1+vl
      mWeeobW1lcuXLyNJEocPHyYUCrFz50727NlDZ2cnqampXL9+HY/Hw+3bt6mvr0etVrNnzx4u
      Xbq0rEhwe3s7Fy9eJDk5merqas6cOYPD4SA9PR21Ws3IyEjiia9WqyktLcVmszEzMwM8oZHg
      71oSGZwdZUZroTTtQcsFKvR1d1OyfiOaH5HI/n4kkT6fD6fTSXFx8Q80qnszPDyM1Wp94Ejw
      qib4e0dh3jlPWnoGPybZwIrVBD8pfP66exyw3inB92NiJbVJfSINYLVP8PIQRXHFGMDqXbLK
      QxEMBnE4Hg/3rd1uX40E34vPNcFufxx9mpU9O+pI0j5ck76w18aNm23EDVZ2bK/C8DdR49mx
      UZJzCzCq7z62d3oaJTsbsygyN9zBzZ4J1CYrT+/Zgk66z8WBohCJRFFrNY9cd/B5OcShoSFe
      ffVVkpKSuHnzJlVVVVgsFgDGxsZoaGggFotRVlZGVVUVp0+fprS0lJqaGiYmJiguLqarq4sN
      GzY8tCbY5XLx9ttvk5OTwwsvvEB7ezttbW1YLBaOHj1KU1MTt2/f5ujRo7jdbtauXcvg4GAi
      Yv3EG8BXNcFCLIosiyjyUgvUeDRCNBpD0ujQSArBYAhB0qDXae7yTff29lO29WmS44vIKISD
      fiIxBb3RiMtuR2PJQxULEYkp6AxGVKJC0O9nfmoGrdWKGfD4FJ4+chRmWmjrX2DL2iRikRga
      g45wIIAiqjHo1IRDIaIxGY1GRTQaR2/QMT05RW5JAYIsIhFHFlWPRIc8NTWFJEnU19eTlJSU
      KJgbDH7R5K+oqIi///u/Z3h4mGAwSHNzM/v27Utogj+PBC93utXY2EhNTQ1FRUWJSPCvf/1r
      NBoN09PTzM3N8atf/SrRuNtqtdLT00NZWRmwAgzgqwz2dZCWs5GArR9VRi4jjdeIJyURJZW6
      igyamrrwKXoO7HuKZL2A3x9A0ujRaVQU5uVw4+pZzHnl1KWaud18nUm3F8uaPXzugBtsv8ao
      009G4RaKdXO0jy8QdXipqa1Z2kCOs+jzIfuCqLVqrp/+gIh+DRvXGGi9PYYcEdl+cAdNnzWg
      S5bwRMykqLxYqw8wZ3OQl22itc9OijZGZmkVafof3gAsFgtNTU1cv36dvLw88vPzv7bTYzwe
      Z3R0lG3btmGz2cjMzCQvLy+hCf68T/ByIsEbNmzgww8/xO/3k52dzezsLG+88QZ1dXWEw2Gc
      TidvvfUWzz33HAsLC/znf/4nr7/++sNpgp8EBL6IFCtAWu469u7bT4FZwOV2odIaiHoX8IQj
      EA/S19XBuGMp/cFkKeLZI0fJlZ1MzM+xEBRIMqqxJXoJLOLyQJJRh316llm/wr6n97FlQ9EX
      btCYj862VqajOWwuSUKbXsSB+i3MDY0gaA0kp+iQYwL562rY+8w21hZVsHvHBuTgUnqyypCO
      OTTDTMxEqv7R/Pl0Oh379++noqLiS5WWv8r09DRms5mkpCRisRihUCihz62trSUzM5PZ2dll
      aYKzs7N59tlnEUWR8fFxfvnLX/Lb3/6W3t5eJEli27Zt/OxnP+PKlSukpKTwwgsv0NbWdp+a
      4CcGAbV66aOmGNTcutJAJK6wNbsI1Z2fS2o1khgn4A+gMxqRBAFUSdTu2J04ysxAK53DDhQx
      iZ1lWsaiQeIqFQaNGpVajYiIEg8RVvQY9WqykxT++tfPUIVEtlRWLZ3HkMGuLRtJEgUURUlU
      RS4pL2HwxiCiaalptEolIQjiUskWQUKSlly7Yfc0MWsFRcEZpt0R8lJ++EK1TqeTDz74AI/H
      w8GDB2lqauLixYtIksSxY8cIhUJs2LCByclJKioqEASBgoIC/vSnP5GRkUFlZSV2u526ujrO
      nz9PZmbmQ0eC29raaGhoICUlhZqaGk6dOpV421RUVPDBBx9w5coVduzYgcfjYR5b35EAACAA
      SURBVM2aNdhstlVN8Cr35n4kkT6fj7m5OUpKSn6gUd2boaEhsrOzVzXBq3w3rGqCf+SsJEnf
      98GqJvhHzqomeHmspAfIivMCrfLdEAqFViPBPw7CdF1vZNrrRzKks2tHHYZvibtEPU5cYhIW
      05JuOBqJIKrUSH8TdJJjEeKCCvVX0pyDzkkWVJlkmzWMjY5TWFz0NxJKHyPDIXKTvcxpS8hL
      ftQx3YcjEolw/vx5RkZGePnll9FqtZw9e5bc3Fy2b9+OJElEIhEuXbrE/Pw8+/bto7Ozk6mp
      KWRZ5tlnnyUUClFUVER3dzcbNmx46GCYy+Xigw8+IDs7m6NHj9LZ2UlnZydZWVns2rWL06dP
      E4/HOXLkCHa7nTVr1jA4OJiIWK8AA9BSuXMvaxZmGLJHkYgSl1VwJxKsxCIEQlF0BiPEQoSi
      MuKiB6cioyeGwWjE5bBhzMxGrcSIRKOotQZknx2vyoLV/GU3pD4llfamHgyFerxkIShxFhcD
      iGodem0Qu81LluDAJZeQY4iwGAih0RnQCDKKSo0cCYFKhyjHQKXmfjMlfkhmZmaQJImnn36a
      pKQkmpub2blzJwMDAzgcDrKzsxkfHyclJYWqqip6eno4cOAAsixz5coVdDod4+Pj+P1+VCrV
      sjTBLS0tVFdXU1hYiCAIzM/PJzTBi4uLHD16lPn5edrb24GlIN7g4ODKigTLsQAjky6Kyzcw
      PtRBirWcoGMQKTUbW99tgpKGgoJ8xoeGkLTJFFl1jI1OMB8PkFaxF3neQVGqmRsXr6BOSSYq
      pLMhI4InLQ0rGsJBP2FZwGTQI6iSKEyJca7DyZGD65gZ7qJn1EZIMXLgwNovjet28zU8cQ3+
      iIrtpTqmtOuIj16EjG2oPGMU1tTwYI69H4asrCza2tq4efNmouN6VlZWopkKgNVqpa2tja6u
      Lvbs2QOAzWYjKSkJo9FIW1sb6enp/PSnP11WJHj9+vV88skn+P1+srKysNlsvPXWW9TU1LBp
      0ybOnj3LzMwMR48e5dq1a/zv//4vv/nNb1ZQJFiRmRkdITm3iCTNnY+rQDwWh4CLSGoJu3Zu
      J1Xxk7amkp3bN5Oq07O2agt7t5Yjy1/8cTLy17F9114sSfEvlUJ3zY7RPzLN5010ctYVUWwt
      QSuJTIyPodEnkWbU89VlpS+uYufOnRSqYkRzSwhO9CAklSAvjhNWqTE+hk9/WKr8vHfvXjZu
      3Eh7ezuyLBMMBvH7/Wi1S01UZmZmWLduHc8//zyjo6PIsszw8DAlJSUIgkB1dfV3EgnOzMyk
      vr4eSZKYmpri5z//Ob/61a8YHBzE7/dTX1/PM888Q1dXFykpKRw7doyOjo7EOZ94A4gH5mhu
      66Gr6SoXb7SiVWtovXmJ7hEbmCykBMY4c6aBeSmVxdEOzjRcwxWJoxJFEJaSzdQqNaIgorqT
      /alSqRAldSIRLbtkI1sr136RmCZK6O5Ui15TXIDX6yMYjQMiao0KQdKgEsFiUnHm9GmmVCbS
      RCOSfxKDpRi9vIDKlPdoLth94HK5+Oijj7h+/Trp6ekUFhby3nvvMTo6SlpaGrdv3yYlJYWu
      ri4++eQT0tLS8Hg86HQ6UlJSANBqtezevZu+vr6vzSO6X7q7u/n0008ZHh7GbDZz/vx5/vjH
      P6LX65mZmeGtt97i7NmzWCwWNBoNJSUlqNXqVU3wKvfmfiSRi4uLOJ1OioqKfphBfQMjIyNY
      rVYMhgfTbD+xkshVvn+SkpLuu7v7981y0jGeSAMQBOGx6Gb+Y0WSpBVz/Z5IA1jVBC8PURSX
      5Zr8MbF6l6zyUASDQex2+6MeBrDkXn3YhfQTb+ZKaIFhZ5zSvAyC87O4MJKXnnyPrWVCwShC
      aI7ZWCr60By69BzMhq9OBxa5/NklPLJCztpqNq/LXVH9giORCGfOnGF4eJhXX30VURQ5f/48
      RqORgwcPotfricViXL58GbvdznPPPUc0GuXUqVOUlJSwZcuWhCa4s7OTioqKh55yOZ3OL2mC
      29ra6OjowGKxcPDgQRoaGnA6nRw7doy5uTnWrVtHX19fIn7xxBuAoNXjneommJ2OzW5Dl11G
      cNFLKKZgNJkQ5SjBYAhZUGFKEpmdcpFpcDEXNmL2OpFNFrT4CIbjGJJMaNUSECIpu4o91VZu
      Nt4iEstGDi0SUVQkmwyEAz5CERmjKRlRjhIKh4gpEmaTkZDfSygmYDKbUP1IjWZqagqVSsX+
      /fsxmUy4XC6OHj1Kb28vdrudoqIiJicnUavV1NXV0dHRQTAYZP/+/QlNsM1mY3FxEbVavSxN
      cFNTEzU1NZSUlCCKIvPz8wlNsMvlora2FrVaTWdnJ4qikJ2dzeDgYKJo75M/BRJ0pKaIuN1e
      vL445mQVA+0tXL3YQMugg9HbN7lxq52LV6/j8fuYnVm4q9/veE8zV69eoLFj7I70Eca7bnDi
      r2dQ9JnIC5NcvHqVK+dOMzwfYbizkatXL9B8e5rxrkZutHZw5fQl5mUfl/56huaWDhajP/SF
      +O6wWq0Eg0GuXbtGOBymoKCAhYUFQqFQIscmGAySn59Pbm4uoVAISZLIyMggNzeXQCBAc3Mz
      3d3dy64OXVFRQVtbW+IGt9vtvPHGGzQ3N5OamorJZKKtrY3Kykrcbjf/9V//xVNPPbWCIsGA
      JcXMxEgf8ZRsDBEvrqiA2aTBbp9HMqZRt30XFWV5iPGv6/TrZ96tkGJOwmWzJ3oBF1bu4Ojh
      g0ghF7MjY4QlHakZGWgUDy6PQIrZyNysDUWdQt2uXdSV5RFBR2FJNmLMi8v34+0qrNFoePrp
      p6msrKS1tZXx8XHsdju7du1KSBtVKhVer5fFxUU0Gg3xeJxgMMji4iJarZba2lqsVivT09PL
      jgQfOHAAlUrFxMQEr7zyCr/97W8ZGBjA7XZz/fp19uzZQ2ZmJqmpqbz00ku0tLSsLE2wIcuK
      r6mP9aUbQYwiRAOEETEmaVCp4ogCqFRqBEFCo1UjSjIalYhao0ESVAhKCH9ETZJBe+eIIrP9
      t5ie1iIlW6ioKqXnUgvuuJ58JJCDBKJ6kgyaJa2wAKJaDUTxLPgIRGRU4o83/vh5Bqbb7ebZ
      Z5+lpaWF2dlZurq6OHjwIG63m+LiYo4fP861a9c4fPgwwWCQP//5z2RlZVFVVYXD4WDbtm1c
      uHABi8Xy0Jrgrq4uzp49S2pqKrW1tZw/f57p6WmsVivj4+Pcvn2b8fFxqqur0Wq1lJSUrGqC
      V/lm7lcT/GOvDr2qCV7la1nVBP/IkWWZaPRHvMp8xKykXKon0gC+1CJplQdGluUVc/1WhBdo
      le+ex6k6tM1me+g31oowgIGWS5w8dZqbHYNE4vdY8gScTM4Hv/53gN9uZ+HORR4fHSTyDQ/I
      6cnJRLzgc7wzg7QOTN27WbYiMzk1deefcRovfMqpU6fpHr13M2pFUYh8ZaoX9tu5casXGZDl
      ONHokgwnHo0Q++qgHpJwOMy5c+d49913mZ2dxWaz8e6773LixIlEgdzPdcNvvfUWk5OTjIyM
      8Oc//5nm5mbC4TBDQ0PEYjHa2tqWNV39vErdZ599ljhOR0cHTU1NhMNhPvnkE95++23cbjf9
      /f3Iskxvby9utxt4QqdAX0VUp/L0oQomulpxuv2kaOJEZBGTKQk5FiEaiSCFPCwENGSbRBRJ
      fZfYPezzETCZSAVcTgdZeWsIBLyEZZFkUxLEI3gX/WgNJtwLC1hzrITiAlq1CkGAUZuXaGyB
      uJKLEI0QDIeIxEVSzEnI0RBeX4BZxzz5eXkosoIxq4RtGzcCCvFICK8/iN6YjFal4PP6QK1H
      E/PTNjBGeXk5qSYjoOCemkKOyTiCcTTeCUZnQ6xdU4BzoINI9nqK05OIhhaJyhKmZNNDVZee
      nZ1FpVKxb98+TCYTbreb5557jv7+fubm5igoKCAUCrFu3Tqqqqro7OwkHA7zk5/8hJaWFpxO
      Jw6HIxETWE7iXVtbG9XV1RQXFyMIAj6fj5GREXQ6Hf39/ZSUlJCRkZEIlFksFkZHRykvLwdW
      iAHEIkEWXPP4wzE07mmapu2olBjmok1Is+3MRJOoLErBv2CjyxmmeP06UvQSPrcXNIY7/v8A
      zRfP0S2q8UagKG+M1oFp9EKI5MIasHfhlXVY8suIhHz0dneQkltObnoSyItE4jpy9X5mAnG0
      I210BEDlnGdd/bPYmq8Q1Zhxh764GacHWpmamqZ4Qy2R2U5mXGHElFyqMxVahmdRYhJryvKw
      zUyjS84gdZ0RJR5h2qeiYp2J8Qk7xoidmWkvBpMet22WxYieNE0x4z1NOHxx1lZtpywv9YGv
      p8VioaOjg+vXr2OxWMjNzWVycpJwOJyou5+cnIwoirS1tVFeXs7Q0BDvvvsugUAAi8XynWmC
      N2zYwPHjx1lcXGTfvn20trayfft2urq6KCws5Pjx40QiEQ4dOkRLSwtvvPHGlzTBT36fYGBq
      qBvHYpTMnFLUEQ+m7LVsLEpmeCaIUS2zrnoLaeIiHT0j6NJzKLamIQpRxvsH8aMj1Wwg5PKR
      WbmJmvXriXjtKIE4KeUVVBSbGR2cJx6H2m1bSTNpGe1pwaOYWb+mAJUk4J/s4mLnKAGfA2c0
      DasUx1pTQ7EqhEdvIuwT2FJbyaJ3gWyrBUWWCaNh544dpBlUtLc2kZKVi96YRHB2goghhVST
      npyCMlRqFZvKSxEEgYh/jpvXb2Kb8+Dwx9lcUYpKl0Z5aT5aJUJ6WTVmYYGpaR9qIUZEbSI/
      K+Wu6/dtfYIFQSArKwuVSpXoFTA/P8+WLVsSSW2BQIC2tjaqqqoSZdGrq6sJBAJYrVb0ej16
      vR6VSoXZbH5oI9BoNKSmphIIBPD5fFy6dImJiQm6u7vR6XRs3LiRTZs20dXVRVJSEnV1dfT1
      9VFUVLRC+gQDKVlFlJeXowMivjg3m27RHxEor92B4A4t6X9FNWuqd5DkG2LCmU5RlomyTZsT
      xxBVqkTymkarxVKYy61bVxmMQ/nWPYiObs6dOUN+eS2ZBRuwpmnoHZpl07ocphZEfvrT5zGp
      ZZqbOxE1BgRAUGtQiwbEwDhnzk2jMt3pti4IaO4kiAkqiaLcHEZcCyRrUigrK2SybRRMZgRJ
      JOQY5VIAnt5STtDtYvOBl1mTqWKgvYsgamYHbxBURIp0IjcvX6KqooRoeJG4SkeKVoVzegh1
      aj4Ldgd5xfn3NSVYWFjg+PHjeDweDhw4QEdHRyISXF9fj8fjQa1W097enihBYjQaaW1tpaCg
      gIyMDObm5tiyZQtXrlwhKyvroSPBvb29nDt3LhEJ/qd/+qdEQ46ysjJOnTpFLBZj165deDwe
      ioqKEg064AmNBK8kP/b3wf1qgufn5yksLPzG7X4IRkdHsVgsq5rgVX44HidN8HLSMZ5IA1jV
      BC+PVU3wj5xVTfDyWNUEr7LKtxAMBrHZbI96GMBSXGJVE/wN9DY2MOgIkpSex/YtmzBo7t/u
      bTOTpGTkovvKPjMDLdiVHKrLsoktTHDutoP6XVtQ/81mk4ODpBWXoopH0Wi0CPEw/riEUfvt
      l11RFILB4AMv7H4IwuEwp0+fZmRkhFdeeQWtVsupU6fIyclh7969qFQqQqEQDQ0NuFwu9u/f
      jyRJnD59mqKiIrZt28bY2BglJSV0dHRQVVX10FMuh8OR0AS/+OKLaDQaWlpaiEQipKamcvny
      ZeLxOBUVFaSlpbF+/Xp6enrIzc0FVsgbQFSnsf/oEfKSZFw+P+FQCK/HQyQaweOaZ8HrR5bj
      eBfmmZtfIBqXkWNhXM45pmZtxL4mfcITl/DPjhCRFUbGZomG3cjRCMFIHOQowXCMhbk5QiE/
      t27dwO50Ew8tMLMQQpFjLDjnmJ93E1NkwqEgCy4P0UgQ59wcbl8QFBmbzYYSC+HxeHA6XUTl
      x8NhNzMzg0ql4sCBA5jNZtrb29m3b19CkggwMTFBRkYGBw8epLe3l7a2Ng4dOkQgEMDhcOBw
      OOjs7ESv1y9LE9zS0kJtbS27d+9GFEW8Xi+jo6M4nU7WrVvH66+/zq5du8jNzcVut+N2uxkd
      HU2UaFwRBuC2D3HqxF8Z98QxG0VaLp6n9fYQE8M9XL92nQsXruL0uuntaOXmxQa6p70Mdtyi
      q28Q27xnSSMcj+B0zuEPfV7iVkW6Qc1CMIAvIpKqV4FrgFsjHghOcat7aXoQDbix2+yMjM8Q
      980y45WZ6WulrXeAmycvMIefS389SffQNIvzUzQ23uRsw3WCssyszUZ0totTN27T23aVAfvj
      4dq1Wq1Eo1GuXLmC3+9HEAQyMjLIycn5UnXokZERPvnkE3Jzc1GpVKSlpZGdnZ3QBH/esHo5
      keCqqqpEd/h4PJ4o1S5JS3Vc4/E4ExMTFBYWsrCwwH//93+ze/fulaUJTrGs4dmjh1mbqmV+
      cRF9ag47ttcQWrCBIYXszHTiATcBQUeaScLu9BKRtdTt2E5pbjoCQCzExPgYLv8XvbPyC9MY
      62xHSC9BLQgg3GnPFIkkkuF0qTmUrimlrmb90jaAPSCwe+dO1uQspSGYc9axZ+t6XPZ5UtIz
      EBeceO7sL4gSG2p2sm1LOUr48UhRVqlU7Nq1i02bNiWqQ/v9frxeLzrdUlORqakpysvLeeml
      lxgZGSEajRIIBPB6vQlNcE5ODpOTk8vSBKemprJ//340Gg3d3d1cv36dDz/8kEuXLuHxeBge
      HqaoqAhRFElNTeVnP/vZlzTBK8IAAu5Jzpz4jK5JFwadHmOSCUkUyC8sJu5fwO0LIqg0xANe
      wooGo15Dki5Gw19PM2zzLXXX1iZTU7uV/PSlOblGo0FlzifidlOQl4xOr0cwWfD3X+F8Yy+S
      WkSr0yEC2qibk+duEhY16DUi+Skin534jLZRByIiyclL/nSdToVr3o3enIKKpYbUqLRoJEBS
      o1E9HmVUFhYW+Oijj7hy5QpWq5XS0lLee+89JicnycjIoKuri4yMDLq7u/noo4+wWCyUlJTw
      l7/8hfn5eTIyMjAYDOzevZuhoaFlVYfu7e3l448/ZnR0lNLSUv75n/+Z3/72tzz33HOYzWam
      pqZYt24dgiCg1+spKirCYDCsaoIfJY6RDm7dnkA0WNhfX8fj5nG/X03w/Pz8j7o69KomeJWv
      ZVUT/CNnVRO8PGKx2IrJpXoiDWBVE7w8VtL1WxGL4FW+ex6n6tDLiQSvCAPob77IyVOnuNTY
      QSDyYMJY++wkoa/ZJx720Xr9Ig0XbuAOfbn93fTwMP7Yl5+gjslJgvLyRLm+qV5OnDzFmXMX
      mVl4WM+JQiQcRmZJexyOPPhUMRwO09DQwLvvvsvMzAwLCwucPn36S6kRgUCATz/9NFFBDmB8
      fJyTJ08SDocZGBggGo3S2tq6rOmqw+FIaIIjkSUXdWtrK42NjciyzNWrV3nzzTex2+309vYi
      yzLd3d0rSxMsadJ4+lAFMz2duBf9SAY14XAYnUFPwOdFUekxJ+lY9LgJx0VSUs1ISpQFt5dp
      mwNjyt0LwrGBXtLW1FJlloiJ4HXNE5IFUtNS8bjmMeQXILvdBKOQkpaG3+0irNNi1BhJTdYT
      CYcJBMIkpyThcbkQtSbMSRo8LhcxUUtaionQoht/GFLTUlCJAvFQlKq9h8iMzNIzPU2mzoLb
      F0CbZMakVxPwefCHZUzmZIR4HI1eSzQYQqXTEvS6CcUlko0SHbc6yV6/DmM0QO/MPOVr12LW
      S7jdPjRJ5m+9nrOzs6jVap555hnMZjOLi4tkZmYmbkBY8syUlpZiNpvp6emhtraWvr4+FhcX
      icViOJ1O/H4/BoNhWYl3HR0dVFdXU1pamogET05OotFomJ6eJhQK8Ytf/AJFUejr68NisTA5
      OcnGjRuX7o2VIIkc7bpBx+AEQfSUFGbSde0atsUYSshJd3c/I2OzpFtSGb3dxeBAP+GkHHwT
      nUw6vbh9fvLzCtCIMZzz88iSFo1KZHJ6isLCYrQaDSopTPetZoZH+gnpcpH8TkzWLMbamxkc
      HWJRyUAfcTDr8TMz0I8210JrwwU8shbBP01HzxAjQ9NYrCouXukiHBOxZAhcv3iLyZkJQlIq
      1jQjfscIl1tuM+f0kF9aRsw1Rlt3H6OzixRkKNxqHsTrszHvl5gfHSO1wMrorTZiZpG2a61M
      TE8RE1TYJyaQ1RqEcIDxWTtaQzLu8T56hsaYmnWTkpWK+RskkVqtluHhYXp6eigtLcVisRAM
      BhFFEbPZnPgbXL16laGhIQKBALCkJV5cXKSwsJBTp07h9/vZvXt3Imr7MBgMBq5cuUIwGKSo
      qIjm5mY2bdrE3Nwc8XicsbExurq6yMrKYnR0lIsXL3Ls2DH0ej2///3vf7ciDCCwGKF65w60
      /gWCag3xkEBVTSXO0dssimYyzckkGcDuCWNShVggDX08xPrNNYhhH6aULDRKiOGxCSRDKia9
      GrdjFlVSOnqVQtw3x4AjRIougitqxqQsYkrVMj7lxWwWcHk1pBlFCiuqyBac2MUspLiKupp1
      9He0oE6xkJpsJM2ajxj04Xd7SDbJ3J6KUpidgTk1jVSTnoh7gayqnWywGhmbtBHxe1Ebjbhs
      C+RkSQiWTazNFnG7BQj7Sc/Lwjk6hagLMjEvkpuVRnp2DkmixJqqjaQatMTURjYUptPV2Ycp
      00JKsgm9wcD/396ZdbdV5en70TzbkjVZnmcnceIhTpwBEqBISBiqWF1UF1Q13dWs6sV13/QH
      +H+GvuiLXgUNFBTdUFSFJM7gEJzYsR3b8TzFs2VZtizJmufpfxEiCGEINhCI/dwlPjpH2tI+
      Z+/97vf95aq/OWfTYDAglUqx2WxUVFTg8Xju6QBKpZJ9+/ZhMBiIRCKMjo6ytLTE8PAwJSUl
      aLVaVCoVAoEArVa76e0QIpEIrVZLNBolGAzS0dHB0tISY2NjVFdXU1paytGjR+no6ECr1XLk
      yBEmJia2lyc47Fvh6iU7YrGa5pJS4mo1IqGAwpIyrAPTeBJaiiUG0uEAMaEElUKCJpXiWtsn
      CJUqCisAmYZ99Y3Zc1aUF9PVe504cpr210DES0QuQa2QIEspEIllCOIBQlIZGoUUuTRE95U2
      hDIdj5eLsG6oQAC11RV0jFpRKLUIklE2fF4SAjUyXRmFMitOdwqNpezORQVJ+tsvoRILKd7V
      iNTnY8XhR52bg1Sbj/1aG4viDAZLI0ZNivYr1xDGJRww1qKb6sXtSWMoESEXBum41kXL/gYC
      tmm6IymqSk2MLDnRGmR8W06Ez+fj7NmzeL1eTp06xcDAADdu3EAkEnHq1Cmi0SgFBQW0tbUR
      i8V47rnnOHHiBKlUihs3blBRUcHU1BR1dXV0dnZmTfKbYXp6mitXrqDX62lubuY//uM/iEaj
      3Lp1i6amJs6fP09vby9Hjx7F7/dTUlKy4wl+FIkH1+nqGiQukrJ3/xEKdPJNn+tBPcEbGxuU
      lJRs+jrfF4uLi5hMpk15gnc6wA738SAd4FHgkTXFC4XCbeNp/SHY8QT/zBEIBNvG0/pDsOMJ
      3mGHbyEcDmcnkg8bu92+owR/ExM9l/n47Fmu3Bgg9E2xzukYQzeu0jdxf7ozATsLrm9u5GAw
      8Hn6c3SdhdXQVx7XdelDzp49x61p+wN/hi/iXljAv6lXfj9Eo1EuXrzIe++9h81mw+12c/78
      eez2zz9PJBLh448/5q233sJms7G6uspbb71Fe3s70WiUyclJEokEvb299who35W1tTXef/99
      /v73v2cTqf/7v/+bzs5O/H4/7733XjaTdGxsjHQ6zfDwMB6PB3hEh0BfRiQ1cOKFRmyjg3gD
      EcTyNJ5AhNw8PVISuDd8yDU6hKF51uK5HLzrAvsi8QCecC4F0TDhYJA4Uoz6HIIeF6G4EINJ
      j2vdgaJMTdjrIuhZwpWopkQfxun2oczVo1FIEQhAaazgSFMDN652EK22kPC6CMYFGIx64pEI
      KpWCSCiCVCkh6AkQjsfR5pmQiZK4nW5Wl1awPMTaXHeV4GeeeQadTkcwGMRsNt/zQ15eXsZk
      MtHS0sL4+DiJRIJnn32WwcFBnE4nLpeLYDCIRqPZkid4aGiI5uZmqqurEQqFNDY28thjj/G3
      v/2NZDLJ448/nj0uGo2Sn5/P8vIy9fX1wDbpAF7HLOPn7Gi0Jg5Xpei/0Y0nGkVprCVftMbs
      WhChXEtdkZhgIIInEEaXK8PjcIIiB12OMtshFiYHcAXFBAJBDh3bR3d7D0p9Ac16HWv2FUwa
      EV1jNvRSP0l9FRMDN1hyRonL9bz49BFEAgHRoIdVu52YUIIguEznzQXycmHZVU5kY5knjh1h
      on+QyiOldFyZwFQsZtmVxJBcZiUqIuYJYnmI7Zmfn8/IyAjXr1/HaDSSn5+P3++/75j+/n6G
      h4d54oknsNls6HQ68vPzs55gg8HAK6+8siVPcENDwz0VKwOBAB9++CG7d++mrKyMCxcuIBaL
      ycnJQSAQ8Kc//YnXX399e3qCa3QyXOs27ME0pvwiTDop9hUXeeZ88s0GLIXFVNTUUVVkQEiK
      jXUHHv+XimYotOxvbmZPeQEZkYqqigIEMRfuwJ0NcT6Hn6oDB2jaW4NUKMBuX8OQb6HAmMfd
      7zkS8HDrxg0MVbtJuVfQ1bZwoPkAUc8KZDKk02ni8QQIhJTtbqS5eT+KdISNpIzDLQeoKtL/
      yC14LyKRiMOHD9PY2Mjw8PBXHvNFT/Dc3ByJRIJQKITP58t6gouKirBarVvyBGs0Gp566imU
      SiXLy8sYjUb+9V//ldXVVfR6Pf/2b//GE088gdlsRqfT8fLLL9PX17e96gRH/DYun1tBItFw
      6LFmqo12rGvrFCgNVFQXMz63htpUAkIJimxmj5SqfQ2fn0QkRSERIpPJEQoFSGUyRJkEG54N
      gnEBMrEQhVKJrtTMcPsVFqSgrzZTU1nBiHUVlfHzIYuloo7a2kqmBocJL3yXNAAAIABJREFU
      Vu8i2vUJreMCdjcfR7A+zPnWNpIpKXsFYmQyEQiEyBUKDDI/recvIMsoOPTjNuE9+Hw+zpw5
      g8fj4bnnnqOvr4+Ojg5EIhHPPfdcdqhx6dIl+vv7aWlpQaVS8b//+79YLBb279+P2+1m3759
      XL9+nYKCgk0rwTMzM1y8eBGDwcD+/ftpbW1lY2MDk8lEJBLh/fffRyAQ8PLLLzM6OkpJSQkO
      h2PHE7zD1/MglshHIR16xxO8w1ey4wn+mbPjCd4aO57gnznbydP6Q7Cd2m9brALt8P0TDod/
      MunQW1GCH8knwJdZXVxEX1Z2XwBVIh4DkRiJSEQsEkGiUGz6jmCfGWJ4aoEYckqq62ncVfit
      54oEAkg0mp/dlxCNRmlra8NqtfLrX/8auVxOb28vjY2NWCx3FIqlpSXa29uJx+OUl5dTX19P
      X18fLS0taLVa5ufns+nQDQ0NmxbD1tbW+Oijj8jPz+dXv/oV3d3dLCwsUFNTQ2NjIxcvXiQS
      iXDq1CkcDge7d+9mbGyM4uJiYJt0gJDfz91aiLGQ/44KrMtleXKMmEJHoSmP6eFhCur2YVQp
      EMvkkIiRkUghHmbDG0SjMyJMBvEG4+gMBuTie3/eBdWN5EqTzIj30lgoJxqNEA8HEWv0JAMu
      wkkxxjwV0aQIpVxEJBwl4HShUasJe5yE4gIMJgPpiJ8Nf4RcvRGldPNWwR8Sh8OBVCrlF7/4
      BTqdjlAolA3MvUtpaSl/+MMfmJmZIZ1OZ2v0JpNJ0uk0brebYDBITk7OljbejY6O0tDQkFWC
      6+vrOXz4MGfPnkWpVFJdXY3BYMga4jc2NlhdXWXfvn3AdhsCpUIM9vYyNNRP7+A0voAfj8eN
      3+/HHwiw4fFjnb2Nyx/FOTuD3e9h5NYgdocDX8BFf9dNhod6GRizkgZCPhdrTg/pr1hIuz3Y
      wcjtJULOJTp7Bhm8eY0pu5vxiTnS4TWmFj04VtdIE6SnvZv5RSvRZIxbvX041lboG5z48dvn
      ATGbzWQyGW7cuIHf78doNGatkF8kmUxis9koLi7GbDaj0WiyfxscHGR6ejpb4Hqz1NfXMzk5
      SX9/P6lUimAwyHvvvUdBQQFlZWUMDQ1x4cIFysrK8Hq9vPPOOxw6dGh7KcFZoj7WwxnyLUWY
      DXoKioqpqt1NaUkJxcVF7KoqQyISkMlkiMfjZJIBErJ8GurrMUsirMclWCzFGLR33FbRoB+3
      7wsb4L6AQKHnYEszkqCDpFJLQUk5OcpcFJkAc7OrFFfe3cygoLK6CKJu1n1ekBZSX1+PIPnV
      G+l+CgiFQpqbm6mvr2d8fPxrj7PZbOj1+q8UuZqamr4XJVilUnHs2DFUKlX2ev/0T//E2toa
      4+PjHDlyhF/+8pdMTEyg1Wp56aWX6O/v317p0JGAnasXLzKwkqTSIGV1dZ1IMoVaJWWst5MF
      Zxhhykdn9xAqtZLR3k5u2z2IZUZMsg2utF1hMZpDRW6G1bV1Yp8VzNAXVlBXVYJI+NndRKpA
      8VmJGJVGg0ggIKekFnXMzZrTTQYBNUW5zIdlGKQgVykRkmDDvUEwLkIly0Mrc3C57SoaY/FD
      a69vIxAIcOHCBbq7uykoKGBgYIDW1lbOnz/P3Nwc4+PjpFIpXC5X9g5/8+ZNLl26xJkzZ7Db
      7ahUKg4dOsTy8vKW0qHn5+dpbW3FarWi0+loa2vj3XffRSaTUVVVRU9PD+fOnaOqqgqVSkVR
      URE6nW7HE7zD1/MglshQKMTGxkZ2MvkwWVpa2lSx7UfWErnDD49KpUL1DdlBPyZb2Y7xSHaA
      ZDJJIBB42G/jZ0ssFts27fdIDoF22BrbaS/QtpgE7/D9sLKyQiQS+fYDfwTm5+dJbzFsGB7R
      IdAXifocdPV0s74RJ8dSzPEjLahlnwtM0XAYqVL5peWwGNNjVsr3VrN5s96jQyaTYWRkhNbW
      Vmprazl9+jQDAwM4nU5efPFFPB4Pra2tSCQSnn/+eTQaDbFYjJ6eHvx+P88//zzr6+u0tbXx
      xBNPoNfr6erq4siRI3z66aecPHkyW1zv20ilUrS1tdHb28uzzz6LXq/n3LlzyOVyfvWrX2G3
      2+nr66OpqQmNRkNHRwfBYJCGhgbi8ThPPPEEN27cYO/evcA2WAaV55r5xamnKC3Yxcknj6AU
      pXDYbTjcPiIhH32dnSyurhOLhLDblnG4faQzaTxu7/3G+G1KKpWiu7ubI0eO0NLSAoBarcbp
      dJLJZLh69So1NTX8wz/8Q3YlJp1Oo1arWV9fJ5PJZNfdA4EAyWSSxcVFOjs70el0yGSyB34v
      wWCQ6elpTpw4QWVlJXNzc7S0tPD666+j1+tpb2/nd7/7HZ2dnZSXl/P6669jNBopKipicXGR
      1dVVZmZmMJlMwDboAF/GNjPMzNIqU8ODLK+7CYVCeP1BQn4XE6PDtHd04wvtbKX+IiKRiIMH
      D9LZ2cnk5CQSiYTS0lJEIhHpdBqbzcbAwADvvfcePt+dAq8KhYLS0lKEwjs/MYvFck8I7uzs
      LD09PXdEv++gBKvVasrLy7ly5Qqrq6sIBAI6Ozt58803cblcyGQyVCoVCoWCSCRCMBjEbrdT
      WVlJPB7nv/7rvzh+/Hj2fW27DhAIR6iqa2RXoY6kNOeOAlxdTsDrRqPPR5GOEdxE0YhHmUwm
      Q3l5OadOnWJ6evqePCCBQIDJZOLEiROYTCamp6cf6JxVVVXs2bOH0dHR76QEp1Ipjh07xvHj
      x7lw4QJNTU38+7//O2q1mrm5OeLxOLFYjEgkgkwmo729PRvBLpVK+cMf/kB7e3t2/vDIzwHu
      IEKlViAAigoL6em4RFqh5+jRXNbsfq519FFXpMS9bkWizkUqFqFSf3lesH25OwS6desWZWVl
      pNNpPvjgA6xWK5cvX+axxx7j8uXLiEQi6uvruX79OqWlpVy4cAGbzcYnn3yCUChkcHCQ2dlZ
      Tp8+jcFg4KmnnuLMmTM0NDSgVqsf6L3E43E+/vhj5ubmOHr0KAsLCwwODpJIJHj66adJpVK8
      +eab7Nu3D5lMxtraGk8//XS2mn1FRQW3b99mYWEB2FkG3eEr+Lpl0NnZWUpLS7eU4/N9MTU1
      lS2AvVl2PME7fCXbSQe4ZwiUyWR+MnmPW+GLqw47fHeCweD3ssb+c+CeDiAQCB6Jnr+zGW5r
      pFIp8vLyHvbb+FH41nlePLSBO/j14aVh3zr+6PYwUO/wOT+ldOi71SA3w7d2APf4J1wYXv/a
      v892/ZXepfCmLv5jMdn7Ca0XL/Jp1wCh2DenQw93tzMwZfuadOhvfqoE/D7S2XRox9emQ/dc
      +TsXL17i1m3bA3+GL/Kw06EjkQiXLl3igw8+YGVlBavVyl/+8hf+9re/EQrd+cyJRIJLly7x
      7rvv4nK5mJub45133uHixYsEg0EmJyeJx+P09vZuKcLGbrfz0UcfcfbsWeLxOFarlXfeeYdr
      164Rj8f5+9//znvvvUcwGGR0dJR0Os3Q0NB3TYdOMd51ga5RGwX7jvJkjYK/nWlDaNhNrRTi
      AScXzvew/0AFF89cQaSr5Pln6rhy5hz+jIann3uGmU/a2BDFCKYsvPrKSR5c+9s6ErmRp07t
      ZWViBH8oiigRx+WNoDOakBFn3bmBQmtAFJxnLaqmyay9Px06ESYQ1RKNBAn6/MQEMvKNOgJu
      B4G4kHyLEY/HjVKdg8/twO+x4qGG4lgIx/oGqjwTuUoZAgGoTBUc2ldHX0c3kZpC4m4H/hjk
      W8xEwyE0ahXhQAipWkrA5SMYi5FntKAQJXGsreOwrlL8ENOh19fXkclknDhxgry8PAKBAC++
      +CITExNsbGxk3Vl5eXnU1dUxOTlJKBTi+eefZ3x8nI2NDTweDyMjI+h0ui15gsfHx2loaKC2
      thahUEhfXx+//vWvkUgkzM7OUlFRQW5uLqOjo8TjcdxuN06nk4aGO7GX3/oESKdTkMmw4XaT
      TIb5pP0aY1cvUvzk7/nts0cQJmJc+sv/ICrdizS4hjMqpbBAj3WoHfGuZ3nukJnrVwdZW/Hw
      2HMvIF5Zwrfpj7s5fOvzXLnUhs2fQiNLMnCzj7GxAfqGZpke6WVobIyem/34glGSyQTReBJI
      4lyx4fSG+OJ0enl2jIXldWbGx/GHXNzsGWR52UEsncGxukrUtcTAjA1/IEQamBzsZnR8nGvd
      g9mJedjnwmpdJiKQIAws0zdmxbO+xPCklZHRMSDDzMgYoaST3u5JPK5lpubWWJoYxub2Eoo8
      3PlNfn4+IpGIjo4OPB4PBoOBlZUV0ul0dotBPB7HbDZnC2gXFhZy5swZHA4HGo2GwcFBZmZm
      KCsr29JSZmNjI7dv3+bmzZtEo1E2Njb48MMPaW9vx+/3U1xcjMViIRgM4vV6+fOf/8zBgwe/
      3ROcyaRZnh2je3iJUpOagalFDh8+hFYBWpOexYlBpuZsZCQynnjhORb7OolKTDTvyaf/k3P4
      RQZcC+NMTa+Qa9IhFEqQSMWIhD++vJRrquDEqZNUamW43au4YyIKi8opNCpwugKYCoooLrJg
      MudTXFpJiVmLgAzRcJho7EuPZ3kue/fWUVlkIiNSUl1ZBBEHTv+doVXQHaS0bg+7KosRCwQ4
      XR4sRcWUFpq4+1hJxqPMjY2gL6si7XOQW7qXuro6YoH1bDp0NBYHhBRX7WbPnt3IieJLSmjY
      W0eR8duruf/QNDQ00NDQwOTkJAsLC0SjUZqbm7P7esRiMW63G4/Hg1gsxmaz8dJLL2EymXC5
      XDQ1NVFSUsLS0tKWVuxkMhmPPfYYGo0Gh8NBfn4+r7zySnZO4HA4cLvdKJVKtFot//iP/3hP
      OvQ3FMrO4FpbRl1+mIM1ZkrNevwpBc2NdVTvbUYedRMVKKmsrqW4rIaafBUiVQ7hYJiqxqPs
      b6xHJwyQySnj6IFdmAvM5Ol0mC1m8nS5P6gE/eVkM/vcEMMTc3iiAsqqa5GGHSyve5HlGCnQ
      i7BaV0lLVBQacwgnJOhzFYCIXL2eXLX8zu82EcKfUSMjhlqdSzIWRqaUYZufxxcXUlxWSjLk
      o6DMwlj3TazrXtTGEgrVKeZsa6QlakotBgQCAfEU7G85SHB5FkF+Fe6JHibmV6jcs5/ctIub
      Q7cJpySUVZiJh8VotRJC4QwGeZQbfaMEogIKK0vYfCHUbyYcDn+j28vv99Pa2srs7CzNzc3M
      zMwwOTnJ+Pg4BoOB5eVlSkpKGBwcZHx8nEOHDiEUCmlvbyeRSFBXV0c0GqWxsZHJyUnMZvOm
      xbW76dCpVIrm5mbEYjGXLl0iJyeHw4cPc/36daanpzl+/DihUIjq6moCgQCZTIb//M///H+P
      pBC2swy6NR7UE+zxeCgqKvqR3tXXY7VaMRqNO57gHX48fkqe4K0U634kO4BQKPxOe8x3uBeR
      SLRt2u+R7AACgQCR6KcZK/hzQCgUbpv229nxu8OmCIVC2TJDD5vl5eVNe5UfySfAl7HNzmKs
      qrpPfItHoyCWIBWLiIRCyFSqTd8RbLf7GRidISxQUrlrP811xd96rpDHg0Snuy+1+qdOOBzm
      /PnzWK1WXn75ZaRSKd3d3Rw8eJDCwkLgzkrRxYsXSSaTPPPMM6ytrdHb20tlZSUtLS3Mzc1R
      XV3NrVu3OHDgAFLp5lrBZrPxf//3f1gsFl566SV6enqYmpoiPz+fY8eO0draikgk4oUXXmBu
      bo76+noGBgaorKwEtkkHCPn93N3aFfG7cWyEMJgNLIwMEJVrKc43MjUwQMG+Jgpy1UgVCohF
      ScvkEPWz5vShMxcijntxeqOYCgtQSu4dIhTVHkAnSzIlaqS5WE44FCQa9CLRWkh4VvEnJRSb
      cwjFxWhUYoKBEEG3h1ytlqDDhi8mpLC4gFTQzZo7hMFSiEb+0/x6HA4Hcrk8a2wJhUKUlpbe
      s6VhcXGRuro6dDodo6OjBAIBfvvb39Lf34/T6cTj8TA4OIjBYNiSv2BsbIz9+/eze/duxGIx
      4XCY1157DalUSmdnZ9b+ODw8TDwez9Yobm5uBrZJB8iSDNB7owd/Io5MW4pOECdGlHg8Tjwe
      JxqLszw7RW7pbjLL08SKC1kfGUeRZ0CmcjLW00+UJOr1ep5oqSLgsuOJiSm2GLP5oHeZHLhG
      WJzPruIwHf23EaeCeJuOE3Z5ObQnhymrCJFrBXWlga5rPWhLKtBbdAz2DKDLNzG34ubE4/sf
      UkN9MwUFBUxNTfHpp5+Sm5tLcXFxdm/NXSwWCxcuXCAej6NQKCgvL+cvf/kLoVAIk8lEf38/
      er2e3/3ud1tSgvfv389f//pXNjY2eP755/F4PLz55pvU1tZSW1vL+fPnEQqF2TrB//M//7P9
      6gRnifpxJ8SUlldTWmjGUlBIWVUNxUVFFBRYqC4vRiKCdCZDNBolkwySkJmp27sHkySCJ6Ok
      rKKGItMd+14qEf9Msb0fodJIS8t+xEEnwlwzFbV16DW5qAkwNb1GWdXn6dC766ogvIZ9wwdS
      C3vr9iBM/XQ3GGYyGRoaGmhubmZi4qtj3PPy8vj973/Pk08+SXFxMQcPHuS1116jpqYGjUZD
      c3Mz5eXlzM/Pb1kJPnbsGDk5OdhsNk6fPs0f//hH7HY7OTk5vPbaaxw9epSCggJ0Oh2///3v
      6enp2V7p0LHgKm1nz9JnS1BrkrK0ZCUYS5KjkTHac405RwgJQa519KPJ1TDcfY3bjgASuYlC
      lY9LrReZj2qp1qVZXLQSTt7ZK5pnKWNXRdHn6dAyDSrZnSbNyc1FJBCQW7YHTWSNpeVV0gip
      LdWzFFVgkIIqJwcRSVxra3jjEnQqPUaVi/OtbegsD2+z27cRCoW4cOECN27coLS0lL6+Ps6f
      P8/HH3/MzMwMo6Oj+P1+PvjgA3p6eti3bx8TExO88cYbqNXqbD2Bw4cPs7q6uqV06KWlJc6d
      O4fNZsNkMjEwMMAbb7yB2WwmHo/z9ttv09/fT1NTEzk5ORQWFmI2m7Hb7cCOJ3iHr+BBLJE/
      tXRoo9G4qTrB22sOsMP3xk9JCd5Jh/4SqVRqp07wFkgmk1salvyceCQ7ALBtTN0/BJnPtmRv
      B7bFJHiH759wOJydSD5sbDbbD+cJ/vkTY7TrOhcvtnLucgcPEvsZc69i834urYf8PuLJe++I
      iYif4FeEAUScC8w5gmQyCSYnp0nds8bgZWLcTmR1nHnPz3ftIRwOc+HCBT788ENsNhsOh4Oz
      Z8/e0yHC4TAff/wx77zzDktLS6yurnLmzBnW19eJx+NMTExkE6S3Mly12Wx89NFHfPzxx8Tj
      cTo6OnjjjTc4f/48iUSCtrY23nrrLdbW1hgZGSGdTnPr1q3v6gn+OSNj39HjlK0vYQtKIREk
      IVCSikcQSOSkoz4c7gB55gIIu9kIpsgVhnFGIiR9UswFFoIBPxq5gojbhy8QQpVnRpHwE5LK
      UcvvVYQVeRZcvSMoQzLIKUeQimFbWUOi0WPSxfF5w6QUPoJCSEYC2NZcaAwWcoQJUgo1Kb8L
      lAbE8RBClRrJ5jWiHwyn04lCoeDEiRMYDAbC4TClpaUkk8nsMXa7HYvFwqFDh7h9+zZ1dXUU
      FxeTSqXIZDJ4vV6Gh4cxGo1b8gRPTk7S2NjIrl27EIlERCIR/vmf/xmJRMLi4iIymYxXX32V
      TCbD7du3cTqdeL1etNo7laO3wRMAUjE/S44IZSVmVpZm8ARiOJbncLrXGRm+TSgSIeReYWTa
      SjQSIZFK4na5CTrmmHWEcbgcJBMRRm4NEYyEmJqYJeh24v3MLulz2VlcWSedzoBITpVZQvdM
      mMp8DYvjA4xNTtF5rZtQ+t67/vBAH+FYjOH+AcIBKzMrYeZmhplbWGf69jQ/1bCZ/Px8JBIJ
      169fx+VykZeXd1+2p8lkYnFxkdbWVsxmM3q9/p5Vo8HBQebm5igpKdmSEtzU1MTMzAxdXV0k
      Egn8fj/vvPMO169fZ319ncXFRf785z+ztLSE1+vl3Xffpbm5eRspwZkkS/NLGEpKUYiFkMmQ
      yaSJRWJkYkFSajO7aqtRZWKo80upqS5HJZVSUr2LvdVFZL6QD6HLL6N2dx15ysw9Rvl0OnXn
      zvbZv/XlhZSbS5CIBDg3PJiLythTXcaXv+doWkRtTQ1GYYqUsZyYfRihsoJ02EZKIkP+E7z7
      w51J8t69e2lsbGRqauorj1lZWaG6uppf/vKXLCws3DepbmpqoqysjIWFhS0pwRKJhCNHjpCb
      m8vKygq/+MUv+Jd/+RccDgdKpZKGhgZ+85vfMDo6Sm5uLq+88go3b97MXvORHwKlwh5uz8zB
      0gqKXBM1hTmM9t0gI5azr2wX+b5JrlyZo7a+GYF9jCuzM+zdXYRCIgKRHJVUBCo1IpEYpeqO
      P1ipUiGRpu8cA+hMxei+eFGBlByNCAGwq7aK7pFFpEojpRjQ5CgQyXNQScCQr+XK5ctoLFVo
      hXKURNAUlJBaWSOmrXkIrfVghMNh2tra8Hg8PPfccwwMDNDT04NQKOTkyZNEo1EKCgq4evUq
      w8PDHDp0iL6+Pvr6+pBKpZw8eZKcnBxqa2u5efMmxcXF39nOeJeVlRUuXryI2WzmwIEDDAwM
      MD8/T0VFBbW1tbS1tTE0NMTx48fx+Xzk5+fjdDp36gTv8PU8qCfY6/Vmtz8/TJaXlzEYDDue
      4B1+PH5KSvBWtmM8kh1gxxO8NXY8wT9zdjzBW2PHE7zDDt9CKBTCZttcuO/3jdVq3fEEfx13
      6wSvOqPoikrvqxP8XfCtzdE7eJu0RMfh4wfJlX7efIuTE+RV1JAju79JPXNzpMvK0ItErIzf
      pG9+HZFYxeNPPYlO/oD3oEwa74YPjV7Hw743h0Ihzp49i81m47e//S0SiYTu7m5aWlqyQVmx
      WIz333+fWCzG4cOHkcvldHV1oVQqeeaZZ7BardTW1tLX10dLS8umPcFWqzXrCf7Nb35DV1cX
      09PT5Ofn8+STT3Lp0iV8Ph+nTp3C5XLR2NhIX18fNTV3Vtke+Q5wt05w97UlDjxRTyIUIC68
      qwRLifo9eHwBFLp89MoMNtsaIlUehfl5iL60cL+0uEzV/sexKAUgAufKIp5ImsKSUkJ+P5p0
      BvfqEu5gEktJGWpxCtuSldWZZYpKywCIJGQ8/fwLSDbGGZhxU18mwecOYCgx41yyklbkUWzO
      wWW3440k0Oaq8fkjFJUW4/X5UOXICMXFyAURkhINSsmP/xBfX19HoVBw+vRpTCYT4XCYioqK
      e5TgUChERUUFx44dy77mlVdeob+/H6/Xi8/nY2BgICuqbZaJiQn279/P3r17EYvFRKPRrCc4
      GAxy8uRJEokEk5OTpFIpHA4HPp9veynBX2Rp4TaeQJy1pVmcXh+j/UMEY1Gmx24TDHmZm5nm
      RnfPnVrBqRhLc7Osee5k3lfW1LI8eoPOoRnS6TRrS3Pcnuinf9yeFcHWl+e4PTlE39ACS5ND
      rAai94hkJCPMTU8zNW0nN09N79VWVv1xHFMD3BydpO/TKywHgwwNThEL2rg5sEhsY56Z1TBL
      9jUEqQTTE8NMzi3zsBawCwoKkMvlXL16FYfDQV5e3n0rQul0mvHxcf70pz8xOzuLXq9nZmYG
      uVyOwWCgv7+fmZkZSktLt6QEHzhwgJmZGdrb24nH4/h8Pt58800++eQTlEolsViM0dFRmpqa
      8Hg8vP322w+WDv2oIuDOVt9IJEIa0JpK2L1nL0a1AMf6OnmWErTiDKFE8v7XytQcfeoZqlUx
      7G477riGirJ8Qhv+z37gXpw+GZXlRYS9HjyxDHt27ab4K+oN5JY0srtAjsZSxYH6CvzrHsyl
      FdQ17EaJAHNJFbV11ZQWlFNdXYQgcUdJFUlVKJMBvAkJCunD+frS6TR79+7lwIEDX6sEKxQK
      Xn31VV544QWmpqaYnJxELBazf/9+xGIxBw4coLKyktnZ2S0pwSKRiMcee4y8vDxsNhsnTpzg
      j3/8Iw6HA6fTyeTkZNYzrNPpePXVV+nq6tpudYLF5GhVCACTLpebPe0gVdJYKUGlUd5RdzUa
      ZIoUC/MLiNVa5GIhiGSUVlZlz+Jfm2dgahmJysTh3XrWU5Os+eTodSpUCgESoQqFOIBtQ4lB
      b6LcIuTa5YtIBCr2f9YDFFojBZWVKAUCMpkMOt0dDbmyfg+fdg4TVOZiLKtApZIjEEhRqUQI
      xApUchGp3BxifgeS4kZq46useuMUan/8VKG7FWLcbjcvvvgifX19dHV1IRQKOX36NNFolMLC
      Qq5cuUIgEOCpp55iZGSE1dVVurq6OH36NLm5uezevZvu7m7Kysq2pASfO3cuu/Hu7pOlpqYG
      t9vN6OgoMzMzNDY2otVqsVgsj74SvMPWeFBP8M89HXrHE7zDpvkpKcE76dBfYscTvDV2PMGP
      ANvF0/pDsOMJ3uF7JxQKPrRlyx+CRyUd+tHvAJkki+P9XL58md6RWdbX7LgDXxE7mIjg9m8u
      jjAZcNLxaRuXLl1h0RXCv77MjbYOnHeXUtMhFpecQIbpvkv0z7ohFaan/TIX267hjf287rah
      UIjW1lY+/PBDlpeXWVtb48yZM/d0iGg0SkdHB9euXcv+3/T0NH/961+JRCKMjY0Ri8WyTq7N
      YrVas57gu1vgOzs7uXbtGoFAgPfff5+3336b1dVVhoaGSKfT9PX1bSNPcCrEsjPF4eNPIk4l
      8LlWcfv8eGVqiooKSEUCBPwhVBop/rAYpSjBhtNNSqJElIqCXIs5R4LD5SKSEFFSUoBUdO99
      QyDPoeXxp0h4Zhm3ezGUqik160h+pg4EV20o88uJupfwCxREQwn8S4soqh+jUWFnZGadlr35
      D6N1NoXL5UKpVHLy5EmMRiPRaJSKiop7ChMKBAIqKytZWFgA7iydLi4uIhAISKfT+P1+hoaG
      sFgsW/IET09P09jYyJ49exCLxbhcLvx+P0KhkKWlJfbs2YPRaGR/nbN8AAAA7ElEQVR+fp5k
      MonD4SAQCGwjJVisoaYsh1tdXSy7/KSTMbz+CH77Cqv+ILODN7F6gghiXuwbYVatszh9MRZv
      D+MKJlhemMbnWGZuPUjcs8jYwsZ9lxBJZFjHu7k1F6QwX40qV4dMfLdpkyx70ljkYTpujiAV
      Z3CuruILZsgzKJHl6MmEH2bd9++OxWJBoVBw8+ZN3G43Wq32vhUhmUyGXq9HIBCQTCb59NNP
      iUQiOBwOPB4PQ0ND2Gw2jEbjltOh5+bmGBoawuv1cu7cOSQSCVarFY1Gw9zcHO3t7VgsFrxe
      L+fPn6eq6nNt5/8D7lP8oSYERngAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales variations of products by city' width='192'>
      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
      A/z/sT7Y+E8dNTAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Store Performance Analytics' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top Selling Products by cities' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Visit Freq New' width='192'>
      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
      AAMDA/xfMXq0YOKrgjMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Visit Freq Rank' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sales by days' width='192'>
      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
      LwcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
  <accelerator-details>
    <exchange-product-id>639</exchange-product-id>
    <data-mapper-enabled>true</data-mapper-enabled>
    <_.fcp.DataMapperState.true...dataMapperState>
      <selectedSourceDataSourceCaption />
      <selectedSourceDataSourceName />
      <selectedTargetDataSourceCaption />
      <selectedTargetDataSourceName />
      <targetFields>
        <tableName />
        <fields />
      </targetFields>
    </_.fcp.DataMapperState.true...dataMapperState>
  </accelerator-details>
</workbook>
